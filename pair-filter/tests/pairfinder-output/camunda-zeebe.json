[
  {
    "repo": "camunda/zeebe",
    "ci_service": "github",
    "repo_mined_version": "9c6518ee25743e6cb505617bbb3d43281e0c77a1",
    "pr_num": -1,
    "merged_at": null,
    "branch": "dd-9837-randomized-dataloss",
    "base_branch": "",
    "is_error_pass": false,
    "failed_build": {
      "build_id": 4161666820,
      "travis_merge_sha": null,
      "base_sha": "",
      "head_sha": "2eed3b2088db013e1b78c60c8b3c22b178c468f3",
      "github_archived": true,
      "resettable": false,
      "committed_at": "2023-02-13T08:46:46Z",
      "message": "test(raft): verify if committed entries are overwritten",
      "jobs": [
        {
          "build_job": "3506.1",
          "job_id": 11293750136,
          "config": {
            "name": "Integration tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 45,
            "env": {
              "TC_CLOUD_LOGS_VERBOSE": true,
              "TC_CLOUD_TOKEN": "${{ secrets.TC_CLOUD_TOKEN }}",
              "TC_CLOUD_CONCURRENCY": 4,
              "ZEEBE_TEST_DOCKER_IMAGE": "localhost:5000/camunda/zeebe:current-test"
            },
            "services": {
              "registry": {
                "image": "registry:2",
                "ports": [
                  "5000:5000"
                ]
              }
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "with": {
                  "repository": "localhost:5000/camunda/zeebe",
                  "version": "current-test",
                  "push": true,
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              },
              {
                "name": "Prepare Testcontainers Cloud agent",
                "if": "env.TC_CLOUD_TOKEN != ''",
                "run": "curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64\nchmod +x agent\n./agent --private-registry-url=http://localhost:5000 '--private-registry-allowed-image-name-globs=*,*/*' > .testcontainers-agent.log 2>&1 &\n./agent wait\n"
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -B -T2 --no-snapshot-updates -D forkCount=5 -D maven.javadoc.skip=true -D skipUTs -D skipChecks -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports -P parallel-tests,extract-flaky-tests -pl '!qa/update-tests' verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Integration Tests"
                }
              }
            ],
            "id-in-workflow": "integration-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.2",
          "job_id": 11293750510,
          "config": {
            "name": "QA Update tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 45,
            "env": {
              "TC_CLOUD_LOGS_VERBOSE": true,
              "TC_CLOUD_TOKEN": "${{ secrets.TC_CLOUD_TOKEN }}",
              "TC_CLOUD_CONCURRENCY": 4,
              "ZEEBE_TEST_DOCKER_IMAGE": "localhost:5000/camunda/zeebe:current-test"
            },
            "services": {
              "registry": {
                "image": "registry:2",
                "ports": [
                  "5000:5000"
                ]
              }
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "with": {
                  "repository": "localhost:5000/camunda/zeebe",
                  "version": "current-test",
                  "push": true,
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              },
              {
                "name": "Prepare Testcontainers Cloud agent",
                "if": "env.TC_CLOUD_TOKEN != ''",
                "run": "curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64\nchmod +x agent\n./agent --private-registry-url=http://localhost:5000 '--private-registry-allowed-image-name-globs=*,*/*' > .testcontainers-agent.log 2>&1 &\n./agent wait\n"
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -B -T2 --no-snapshot-updates -D maven.javadoc.skip=true -D skipUTs -D skipChecks -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports -P parallel-tests,extract-flaky-tests -pl qa/update-tests verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "QA Update Tests"
                }
              }
            ],
            "id-in-workflow": "qa-update-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.3",
          "job_id": 11293750756,
          "config": {
            "name": "Unit tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 30,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -T2 -B --no-snapshot-updates -D skipITs -D skipChecks -D surefire.rerunFailingTestsCount=3 -D junitThreadCount=16 -P skip-random-tests,parallel-tests,extract-flaky-tests verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Normalize artifact name",
                "run": "echo \"ARTIFACT_NAME=$(echo ${{ matrix.project }} | sed 's/\\//-/g')\" >> $GITHUB_ENV"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "unit tests"
                }
              }
            ],
            "id-in-workflow": "unit-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.4",
          "job_id": 11293750963,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "macos",
                "arch": "amd64",
                "runner": "macos-latest"
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.5",
          "job_id": 11293751115,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "windows",
                "arch": "amd64",
                "runner": "windows-latest"
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.6",
          "job_id": 11293751320,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "linux",
                "arch": "amd64",
                "runner": [
                  "self-hosted",
                  "linux",
                  "amd64"
                ]
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.7",
          "job_id": 11293751485,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "linux",
                "runner": [
                  "self-hosted",
                  "linux",
                  "amd64"
                ],
                "arch": "arm64"
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.8",
          "job_id": 11293751696,
          "config": {
            "name": "CodeQL",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "permissions": {
              "security-events": "write"
            },
            "steps": [
              {
                "name": "Checkout repository",
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "name": "Initialize CodeQL",
                "uses": "github/codeql-action/init@v2",
                "with": {
                  "languages": "java",
                  "queries": "+security-and-quality"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "name": "Perform CodeQL Analysis",
                "uses": "github/codeql-action/analyze@v2",
                "with": {
                  "upload": false,
                  "output": "sarif-results"
                }
              },
              {
                "name": "Remove results for generated code",
                "uses": "advanced-security/filter-sarif@main",
                "with": {
                  "patterns": "+**/*.java\n-**/generated-sources/**/*.java\n-**/generated-test-sources/**/*.java\n",
                  "input": "sarif-results/java.sarif",
                  "output": "sarif-results/java.sarif"
                }
              },
              {
                "name": "Upload CodeQL Results",
                "uses": "github/codeql-action/upload-sarif@v2",
                "with": {
                  "sarif_file": "sarif-results/java.sarif"
                }
              }
            ],
            "id-in-workflow": "codeql"
          },
          "language": "java"
        },
        {
          "build_job": "3506.9",
          "job_id": 11293751958,
          "config": {
            "name": "Go client tests",
            "runs-on": "ubuntu-latest",
            "timeout-minutes": 20,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe"
              },
              {
                "name": "Check backwards compatibility",
                "working-directory": "clients/go/",
                "run": "go install github.com/smola/gocompat/...@v0.3.0\nPREFIX=github.com/camunda/zeebe/clients/go/v8\nEXCLUDE=\"\"\nfor file in {internal,cmd/zbctl/internal}/*; do\n  EXCLUDE=\"$EXCLUDE --exclude-package $PREFIX/$file\"\ndone\ngocompat compare --go1compat ${EXCLUDE} ./...\n"
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "with": {
                  "repository": "camunda/zeebe",
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              },
              {
                "name": "Run Go tests",
                "working-directory": "clients/go",
                "run": "go test -mod=vendor -v ./..."
              }
            ],
            "id-in-workflow": "go-client"
          },
          "language": "java"
        },
        {
          "build_job": "3506.10",
          "job_id": 11293752189,
          "config": {
            "name": "Java client tests",
            "runs-on": "ubuntu-latest",
            "timeout-minutes": 20,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "maven-cache-key-modifier": "java-client",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-am -pl clients/java -T1C"
                }
              },
              {
                "run": "rm .mvn/jvm.config"
              },
              {
                "uses": "actions/setup-java@v3.10.0",
                "with": {
                  "java-version": "8",
                  "distribution": "temurin"
                }
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -B --no-snapshot-updates -P disableCheckstyle,extract-flaky-tests -D skipChecks -D skipITs -D surefire.rerunFailingTestsCount=3 -pl clients/java verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Java 8 Client"
                }
              }
            ],
            "id-in-workflow": "java-client"
          },
          "language": "java"
        },
        {
          "build_job": "3506.11",
          "job_id": 11293752427,
          "config": {
            "name": "Property Tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 30,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -T1C -B --no-snapshot-updates -P parallel-tests,include-random-tests -D junitThreadCount=16 -D skipChecks test | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Property Tests"
                }
              }
            ],
            "id-in-workflow": "property-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3506.12",
          "job_id": 11293752625,
          "config": {
            "name": "Docker checks",
            "runs-on": "ubuntu-latest",
            "services": {
              "registry": {
                "image": "registry:2",
                "ports": [
                  "5000:5000"
                ]
              }
            },
            "env": {
              "LOCAL_DOCKER_IMAGE": "localhost:5000/camunda/zeebe"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "hadolint/hadolint-action@v3.1.0",
                "with": {
                  "config": "./.hadolint.yaml",
                  "dockerfile": "./Dockerfile",
                  "format": "sarif",
                  "output-file": "./hadolint.sarif",
                  "no-color": true,
                  "verbose": true
                }
              },
              {
                "name": "Upload Hadolint Results",
                "if": "always()",
                "uses": "github/codeql-action/upload-sarif@v2",
                "with": {
                  "sarif_file": "./hadolint.sarif"
                }
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe"
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "with": {
                  "repository": "${{ env.LOCAL_DOCKER_IMAGE }}",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "${{ env.DOCKER_PLATFORMS }}",
                  "push": true
                }
              },
              {
                "name": "Verify Docker image",
                "uses": "./.github/actions/verify-zeebe-docker",
                "with": {
                  "imageName": "${{ env.LOCAL_DOCKER_IMAGE }}",
                  "date": "${{ steps.build-docker.outputs.date }}",
                  "revision": "${{ github.sha }}",
                  "version": "${{ steps.build-docker.outputs.version }}",
                  "platforms": "${{ env.DOCKER_PLATFORMS }}"
                }
              }
            ],
            "id-in-workflow": "docker-checks"
          },
          "language": "java"
        },
        {
          "build_job": "3506.13",
          "job_id": 11293752821,
          "config": {
            "name": "Go linting",
            "runs-on": "ubuntu-latest",
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "java": false,
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "name": "golangci-lint",
                "uses": "golangci/golangci-lint-action@v3",
                "with": {
                  "version": "v1.47.3",
                  "working-directory": "clients/go"
                }
              }
            ],
            "id-in-workflow": "go-lint"
          },
          "language": "java"
        },
        {
          "build_job": "3506.14",
          "job_id": 11293753040,
          "config": {
            "name": "Java checks",
            "runs-on": "ubuntu-latest",
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "maven-cache-key-modifier": "java-checks",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "run": "mvn -T1C -B -D skipTests -P !autoFormat,checkFormat,spotbugs verify"
              }
            ],
            "id-in-workflow": "java-checks"
          },
          "language": "java"
        },
        {
          "build_job": "3506.15",
          "job_id": 11294773135,
          "config": {
            "name": "Event File",
            "runs-on": "ubuntu-latest",
            "needs": [
              "integration-tests",
              "qa-update-tests",
              "unit-tests",
              "smoke-tests",
              "property-tests",
              "go-client",
              "java-client"
            ],
            "if": "always()",
            "steps": [
              {
                "name": "Upload",
                "uses": "actions/upload-artifact@v3",
                "with": {
                  "name": "Event File",
                  "path": "${{ github.event_path }}",
                  "retention-days": 1
                }
              }
            ],
            "id-in-workflow": "event_file"
          },
          "language": "java"
        },
        {
          "build_job": "3506.16",
          "job_id": 11294773473,
          "config": {
            "name": "Test summary",
            "runs-on": "ubuntu-latest",
            "needs": [
              "integration-tests",
              "qa-update-tests",
              "unit-tests",
              "smoke-tests",
              "property-tests",
              "go-client",
              "java-client",
              "codeql",
              "java-checks",
              "go-lint",
              "docker-checks"
            ],
            "steps": [
              {
                "run": "exit 0"
              }
            ],
            "id-in-workflow": "test-summary"
          },
          "language": "java"
        },
        {
          "build_job": "3506.17",
          "job_id": 11294773720,
          "config": {
            "name": "Deploy snapshot artifacts",
            "needs": [
              "test-summary"
            ],
            "runs-on": "ubuntu-latest",
            "if": "github.repository == 'camunda/zeebe' && github.ref == 'refs/heads/main'",
            "concurrency": {
              "group": "deploy-maven-snapshot",
              "cancel-in-progress": false
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "name": "Import Secrets",
                "id": "secrets",
                "uses": "hashicorp/vault-action@v2.5.0",
                "with": {
                  "url": "${{ secrets.VAULT_ADDR }}",
                  "method": "approle",
                  "roleId": "${{ secrets.VAULT_ROLE_ID }}",
                  "secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secrets": "secret/data/products/zeebe/ci/zeebe ARTIFACTS_USR;\nsecret/data/products/zeebe/ci/zeebe ARTIFACTS_PSW;\n"
                }
              },
              {
                "uses": "actions/setup-java@v3.10.0",
                "with": {
                  "distribution": "temurin",
                  "java-version": "17"
                }
              },
              {
                "name": "Create settings.xml",
                "uses": "s4u/maven-settings-action@v2.8.0",
                "with": {
                  "githubServer": false,
                  "servers": "[{\n  \"id\": \"camunda-nexus\",\n  \"username\": \"${{ steps.secrets.outputs.ARTIFACTS_USR }}\",\n  \"password\": \"${{ steps.secrets.outputs.ARTIFACTS_PSW }}\"\n}]\n",
                  "mirrors": "[{\"url\": \"https://repository.nexus.camunda.cloud/content/groups/internal/\", \"id\": \"camunda-nexus\", \"mirrorOf\": \"zeebe,zeebe-snapshots\", \"name\": \"camunda Nexus\"}]"
                }
              },
              {
                "run": "mvn -B -D skipTests -D skipChecks compile generate-sources source:jar javadoc:jar deploy",
                "env": {
                  "MAVEN_USERNAME": "${{ steps.secrets.outputs.ARTIFACTS_USR }}",
                  "MAVEN_PASSWORD": "${{ steps.secrets.outputs.ARTIFACTS_PSW }}"
                }
              }
            ],
            "id-in-workflow": "deploy-snapshots"
          },
          "language": "java"
        },
        {
          "build_job": "3506.18",
          "job_id": 11294773979,
          "config": {
            "name": "Auto-merge dependabot PRs",
            "runs-on": "ubuntu-latest",
            "needs": [
              "test-summary"
            ],
            "if": "github.repository == 'camunda/zeebe' && github.actor == 'dependabot[bot]'",
            "permissions": {
              "checks": "read",
              "pull-requests": "write"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "id": "metadata",
                "name": "Fetch dependency metadata",
                "uses": "dependabot/fetch-metadata@v1.3.6",
                "with": {
                  "github-token": "${{ secrets.GITHUB_TOKEN }}"
                }
              },
              {
                "id": "approve-and-merge",
                "name": "Approve and merge PR",
                "if": "steps.metadata.outputs.update-type == 'version-update:semver-patch'",
                "run": "gh pr review ${{ github.event.pull_request.number }} --approve -b \"bors merge\"",
                "env": {
                  "GITHUB_TOKEN": "${{secrets.GITHUB_TOKEN}}"
                }
              }
            ],
            "id-in-workflow": "auto-merge"
          },
          "language": "java"
        },
        {
          "build_job": "3506.19",
          "job_id": 11294774272,
          "config": {
            "name": "Deploy snapshot Docker image",
            "needs": [
              "test-summary"
            ],
            "runs-on": "ubuntu-latest",
            "if": "github.repository == 'camunda/zeebe' && github.ref == 'refs/heads/main'",
            "concurrency": {
              "group": "deploy-docker-snapshot",
              "cancel-in-progress": false
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "name": "Import Secrets",
                "id": "secrets",
                "uses": "hashicorp/vault-action@v2.5.0",
                "with": {
                  "url": "${{ secrets.VAULT_ADDR }}",
                  "method": "approle",
                  "roleId": "${{ secrets.VAULT_ROLE_ID }}",
                  "secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secrets": "secret/data/products/zeebe/ci/zeebe REGISTRY_HUB_DOCKER_COM_USR;\nsecret/data/products/zeebe/ci/zeebe REGISTRY_HUB_DOCKER_COM_PSW;\n"
                }
              },
              {
                "name": "Login to DockerHub",
                "uses": "docker/login-action@v2",
                "with": {
                  "username": "${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_USR }}",
                  "password": "${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_PSW }}"
                }
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe"
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "with": {
                  "repository": "camunda/zeebe",
                  "version": "SNAPSHOT",
                  "platforms": "${{ env.DOCKER_PLATFORMS }}",
                  "push": true,
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              }
            ],
            "id-in-workflow": "deploy-docker-snapshot"
          },
          "language": "java"
        },
        {
          "build_job": "3506.20",
          "job_id": 11294774609,
          "config": {
            "name": "Send slack notification on build failure",
            "runs-on": "ubuntu-latest",
            "needs": [
              "test-summary",
              "deploy-snapshots",
              "deploy-docker-snapshot"
            ],
            "if": "failure() && github.repository == 'camunda/zeebe' && github.ref == 'refs/heads/main'",
            "steps": [
              {
                "id": "slack-notify",
                "name": "Send slack notification",
                "uses": "slackapi/slack-github-action@v1.23.0",
                "with": {
                  "payload": "{\n  \"text\": \":alarm: Build on `main` failed! :alarm:\\n${{ github.event.head_commit.url }}\",\n \t\"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \":alarm: Build on `main` failed! :alarm:\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"Please check the related commit: ${{ github.event.head_commit.url }}\\n \\\\cc @zeebe-medic\"\n      }\n    }\n  ]\n}\n"
                },
                "env": {
                  "SLACK_WEBHOOK_URL": "${{ secrets.SLACK_WEBHOOK_URL }}",
                  "SLACK_WEBHOOK_TYPE": "INCOMING_WEBHOOK"
                }
              }
            ],
            "id-in-workflow": "notify-if-failed"
          },
          "language": "java"
        },
        {
          "build_job": "3506.21",
          "job_id": 11294798828,
          "config": {},
          "language": "java"
        }
      ],
      "has_submodules": false
    },
    "passed_build": {
      "build_id": 4162064219,
      "travis_merge_sha": null,
      "base_sha": "",
      "head_sha": "eb2f459c3a118a8fcbc0a3a5e43aaf7b81fde9a4",
      "github_archived": true,
      "resettable": false,
      "committed_at": "2023-02-13T09:36:35Z",
      "message": "test(raft): verify if committed entries are overwritten",
      "jobs": [
        {
          "build_job": "3511.1",
          "job_id": 11294852490,
          "config": {
            "name": "Integration tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 45,
            "env": {
              "TC_CLOUD_LOGS_VERBOSE": true,
              "TC_CLOUD_TOKEN": "${{ secrets.TC_CLOUD_TOKEN }}",
              "TC_CLOUD_CONCURRENCY": 4,
              "ZEEBE_TEST_DOCKER_IMAGE": "localhost:5000/camunda/zeebe:current-test"
            },
            "services": {
              "registry": {
                "image": "registry:2",
                "ports": [
                  "5000:5000"
                ]
              }
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "with": {
                  "repository": "localhost:5000/camunda/zeebe",
                  "version": "current-test",
                  "push": true,
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              },
              {
                "name": "Prepare Testcontainers Cloud agent",
                "if": "env.TC_CLOUD_TOKEN != ''",
                "run": "curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64\nchmod +x agent\n./agent --private-registry-url=http://localhost:5000 '--private-registry-allowed-image-name-globs=*,*/*' > .testcontainers-agent.log 2>&1 &\n./agent wait\n"
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -B -T2 --no-snapshot-updates -D forkCount=5 -D maven.javadoc.skip=true -D skipUTs -D skipChecks -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports -P parallel-tests,extract-flaky-tests -pl '!qa/update-tests' verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Integration Tests"
                }
              }
            ],
            "id-in-workflow": "integration-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.2",
          "job_id": 11294852738,
          "config": {
            "name": "QA Update tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 45,
            "env": {
              "TC_CLOUD_LOGS_VERBOSE": true,
              "TC_CLOUD_TOKEN": "${{ secrets.TC_CLOUD_TOKEN }}",
              "TC_CLOUD_CONCURRENCY": 4,
              "ZEEBE_TEST_DOCKER_IMAGE": "localhost:5000/camunda/zeebe:current-test"
            },
            "services": {
              "registry": {
                "image": "registry:2",
                "ports": [
                  "5000:5000"
                ]
              }
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "with": {
                  "repository": "localhost:5000/camunda/zeebe",
                  "version": "current-test",
                  "push": true,
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              },
              {
                "name": "Prepare Testcontainers Cloud agent",
                "if": "env.TC_CLOUD_TOKEN != ''",
                "run": "curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64\nchmod +x agent\n./agent --private-registry-url=http://localhost:5000 '--private-registry-allowed-image-name-globs=*,*/*' > .testcontainers-agent.log 2>&1 &\n./agent wait\n"
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -B -T2 --no-snapshot-updates -D maven.javadoc.skip=true -D skipUTs -D skipChecks -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports -P parallel-tests,extract-flaky-tests -pl qa/update-tests verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "QA Update Tests"
                }
              }
            ],
            "id-in-workflow": "qa-update-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.3",
          "job_id": 11294852955,
          "config": {
            "name": "CodeQL",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "permissions": {
              "security-events": "write"
            },
            "steps": [
              {
                "name": "Checkout repository",
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "name": "Initialize CodeQL",
                "uses": "github/codeql-action/init@v2",
                "with": {
                  "languages": "java",
                  "queries": "+security-and-quality"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "name": "Perform CodeQL Analysis",
                "uses": "github/codeql-action/analyze@v2",
                "with": {
                  "upload": false,
                  "output": "sarif-results"
                }
              },
              {
                "name": "Remove results for generated code",
                "uses": "advanced-security/filter-sarif@main",
                "with": {
                  "patterns": "+**/*.java\n-**/generated-sources/**/*.java\n-**/generated-test-sources/**/*.java\n",
                  "input": "sarif-results/java.sarif",
                  "output": "sarif-results/java.sarif"
                }
              },
              {
                "name": "Upload CodeQL Results",
                "uses": "github/codeql-action/upload-sarif@v2",
                "with": {
                  "sarif_file": "sarif-results/java.sarif"
                }
              }
            ],
            "id-in-workflow": "codeql"
          },
          "language": "java"
        },
        {
          "build_job": "3511.4",
          "job_id": 11294853422,
          "config": {
            "name": "Go client tests",
            "runs-on": "ubuntu-latest",
            "timeout-minutes": 20,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe"
              },
              {
                "name": "Check backwards compatibility",
                "working-directory": "clients/go/",
                "run": "go install github.com/smola/gocompat/...@v0.3.0\nPREFIX=github.com/camunda/zeebe/clients/go/v8\nEXCLUDE=\"\"\nfor file in {internal,cmd/zbctl/internal}/*; do\n  EXCLUDE=\"$EXCLUDE --exclude-package $PREFIX/$file\"\ndone\ngocompat compare --go1compat ${EXCLUDE} ./...\n"
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "with": {
                  "repository": "camunda/zeebe",
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              },
              {
                "name": "Run Go tests",
                "working-directory": "clients/go",
                "run": "go test -mod=vendor -v ./..."
              }
            ],
            "id-in-workflow": "go-client"
          },
          "language": "java"
        },
        {
          "build_job": "3511.5",
          "job_id": 11294853690,
          "config": {
            "name": "Java client tests",
            "runs-on": "ubuntu-latest",
            "timeout-minutes": 20,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "maven-cache-key-modifier": "java-client",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-am -pl clients/java -T1C"
                }
              },
              {
                "run": "rm .mvn/jvm.config"
              },
              {
                "uses": "actions/setup-java@v3.10.0",
                "with": {
                  "java-version": "8",
                  "distribution": "temurin"
                }
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -B --no-snapshot-updates -P disableCheckstyle,extract-flaky-tests -D skipChecks -D skipITs -D surefire.rerunFailingTestsCount=3 -pl clients/java verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Java 8 Client"
                }
              }
            ],
            "id-in-workflow": "java-client"
          },
          "language": "java"
        },
        {
          "build_job": "3511.6",
          "job_id": 11294853909,
          "config": {
            "name": "Property Tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 30,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -T1C -B --no-snapshot-updates -P parallel-tests,include-random-tests -D junitThreadCount=16 -D skipChecks test | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Property Tests"
                }
              }
            ],
            "id-in-workflow": "property-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.7",
          "job_id": 11294854102,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "macos",
                "arch": "amd64",
                "runner": "macos-latest"
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.8",
          "job_id": 11294854310,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "windows",
                "arch": "amd64",
                "runner": "windows-latest"
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.9",
          "job_id": 11294854531,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "linux",
                "arch": "amd64",
                "runner": [
                  "self-hosted",
                  "linux",
                  "amd64"
                ]
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.10",
          "job_id": 11294854722,
          "config": {
            "name": "Smoke tests on ${{ matrix.os }} with ${{ matrix.arch }}",
            "timeout-minutes": 20,
            "runs-on": "${{ matrix.runner }}",
            "strategy": {
              "fail-fast": false,
              "matrix": {
                "os": "linux",
                "runner": [
                  "self-hosted",
                  "linux",
                  "amd64"
                ],
                "arch": "arm64"
              }
            },
            "env": {
              "JAVA_TOOL_OPTIONS": "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=64M"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven": "${{ runner.os != 'macOS' }}",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "if": "${{ runner.os == 'Linux' }}",
                "with": {
                  "version": "current-test",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "linux/${{ matrix.arch }}",
                  "push": false
                }
              },
              {
                "name": "Run smoke test on ${{ matrix.arch }}",
                "env": {
                  "DOCKER_DEFAULT_PLATFORM": "linux/${{ matrix.arch }}",
                  "EXCLUDED_TEST_GROUPS": "${{ runner.os != 'Linux' && 'container' }}"
                },
                "run": "mvn -B --no-snapshot-updates -DskipUTs -DskipChecks -Dsurefire.rerunFailingTestsCount=3 -pl qa/integration-tests -P smoke-test,extract-flaky-tests -D excludedGroups=$EXCLUDED_TEST_GROUPS verify\n"
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "Smoke Tests on ${{ matrix.os }} with ${{ matrix.arch }}"
                }
              }
            ],
            "id-in-workflow": "smoke-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.11",
          "job_id": 11294854918,
          "config": {
            "name": "Unit tests",
            "runs-on": [
              "self-hosted",
              "linux",
              "amd64",
              "16"
            ],
            "timeout-minutes": 30,
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "with": {
                  "go": false,
                  "maven-extra-args": "-T1C"
                }
              },
              {
                "name": "Create build output log file",
                "run": "echo \"BUILD_OUTPUT_FILE_PATH=$(mktemp)\" >> $GITHUB_ENV"
              },
              {
                "name": "Maven Test Build",
                "run": "mvn -T2 -B --no-snapshot-updates -D skipITs -D skipChecks -D surefire.rerunFailingTestsCount=3 -D junitThreadCount=16 -P skip-random-tests,parallel-tests,extract-flaky-tests verify | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n"
              },
              {
                "name": "Normalize artifact name",
                "run": "echo \"ARTIFACT_NAME=$(echo ${{ matrix.project }} | sed 's/\\//-/g')\" >> $GITHUB_ENV"
              },
              {
                "name": "Duplicate Test Check",
                "uses": "./.github/actions/check-duplicate-tests",
                "with": {
                  "buildOutputFilePath": "${{ env.BUILD_OUTPUT_FILE_PATH }}"
                }
              },
              {
                "name": "Upload test artifacts",
                "uses": "./.github/actions/collect-test-artifacts",
                "if": "always()",
                "with": {
                  "name": "unit tests"
                }
              }
            ],
            "id-in-workflow": "unit-tests"
          },
          "language": "java"
        },
        {
          "build_job": "3511.12",
          "job_id": 11294855121,
          "config": {
            "name": "Docker checks",
            "runs-on": "ubuntu-latest",
            "services": {
              "registry": {
                "image": "registry:2",
                "ports": [
                  "5000:5000"
                ]
              }
            },
            "env": {
              "LOCAL_DOCKER_IMAGE": "localhost:5000/camunda/zeebe"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "hadolint/hadolint-action@v3.1.0",
                "with": {
                  "config": "./.hadolint.yaml",
                  "dockerfile": "./Dockerfile",
                  "format": "sarif",
                  "output-file": "./hadolint.sarif",
                  "no-color": true,
                  "verbose": true
                }
              },
              {
                "name": "Upload Hadolint Results",
                "if": "always()",
                "uses": "github/codeql-action/upload-sarif@v2",
                "with": {
                  "sarif_file": "./hadolint.sarif"
                }
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe"
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "with": {
                  "repository": "${{ env.LOCAL_DOCKER_IMAGE }}",
                  "distball": "${{ steps.build-zeebe.outputs.distball }}",
                  "platforms": "${{ env.DOCKER_PLATFORMS }}",
                  "push": true
                }
              },
              {
                "name": "Verify Docker image",
                "uses": "./.github/actions/verify-zeebe-docker",
                "with": {
                  "imageName": "${{ env.LOCAL_DOCKER_IMAGE }}",
                  "date": "${{ steps.build-docker.outputs.date }}",
                  "revision": "${{ github.sha }}",
                  "version": "${{ steps.build-docker.outputs.version }}",
                  "platforms": "${{ env.DOCKER_PLATFORMS }}"
                }
              }
            ],
            "id-in-workflow": "docker-checks"
          },
          "language": "java"
        },
        {
          "build_job": "3511.13",
          "job_id": 11294855360,
          "config": {
            "name": "Go linting",
            "runs-on": "ubuntu-latest",
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "java": false,
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "name": "golangci-lint",
                "uses": "golangci/golangci-lint-action@v3",
                "with": {
                  "version": "v1.47.3",
                  "working-directory": "clients/go"
                }
              }
            ],
            "id-in-workflow": "go-lint"
          },
          "language": "java"
        },
        {
          "build_job": "3511.14",
          "job_id": 11294855523,
          "config": {
            "name": "Java checks",
            "runs-on": "ubuntu-latest",
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "go": false,
                  "maven-cache": "true",
                  "maven-cache-key-modifier": "java-checks",
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "run": "mvn -T1C -B -D skipTests -P !autoFormat,checkFormat,spotbugs verify"
              }
            ],
            "id-in-workflow": "java-checks"
          },
          "language": "java"
        },
        {
          "build_job": "3511.15",
          "job_id": 11295266081,
          "config": {
            "name": "Event File",
            "runs-on": "ubuntu-latest",
            "needs": [
              "integration-tests",
              "qa-update-tests",
              "unit-tests",
              "smoke-tests",
              "property-tests",
              "go-client",
              "java-client"
            ],
            "if": "always()",
            "steps": [
              {
                "name": "Upload",
                "uses": "actions/upload-artifact@v3",
                "with": {
                  "name": "Event File",
                  "path": "${{ github.event_path }}",
                  "retention-days": 1
                }
              }
            ],
            "id-in-workflow": "event_file"
          },
          "language": "java"
        },
        {
          "build_job": "3511.16",
          "job_id": 11295266289,
          "config": {
            "name": "Test summary",
            "runs-on": "ubuntu-latest",
            "needs": [
              "integration-tests",
              "qa-update-tests",
              "unit-tests",
              "smoke-tests",
              "property-tests",
              "go-client",
              "java-client",
              "codeql",
              "java-checks",
              "go-lint",
              "docker-checks"
            ],
            "steps": [
              {
                "run": "exit 0"
              }
            ],
            "id-in-workflow": "test-summary"
          },
          "language": "java"
        },
        {
          "build_job": "3511.17",
          "job_id": 11295269007,
          "config": {
            "name": "Deploy snapshot Docker image",
            "needs": [
              "test-summary"
            ],
            "runs-on": "ubuntu-latest",
            "if": "github.repository == 'camunda/zeebe' && github.ref == 'refs/heads/main'",
            "concurrency": {
              "group": "deploy-docker-snapshot",
              "cancel-in-progress": false
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "name": "Import Secrets",
                "id": "secrets",
                "uses": "hashicorp/vault-action@v2.5.0",
                "with": {
                  "url": "${{ secrets.VAULT_ADDR }}",
                  "method": "approle",
                  "roleId": "${{ secrets.VAULT_ROLE_ID }}",
                  "secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secrets": "secret/data/products/zeebe/ci/zeebe REGISTRY_HUB_DOCKER_COM_USR;\nsecret/data/products/zeebe/ci/zeebe REGISTRY_HUB_DOCKER_COM_PSW;\n"
                }
              },
              {
                "name": "Login to DockerHub",
                "uses": "docker/login-action@v2",
                "with": {
                  "username": "${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_USR }}",
                  "password": "${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_PSW }}"
                }
              },
              {
                "uses": "./.github/actions/setup-zeebe",
                "with": {
                  "secret_vault_secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secret_vault_address": "${{ secrets.VAULT_ADDR }}",
                  "secret_vault_roleId": "${{ secrets.VAULT_ROLE_ID }}"
                }
              },
              {
                "uses": "./.github/actions/build-zeebe",
                "id": "build-zeebe"
              },
              {
                "uses": "./.github/actions/build-docker",
                "id": "build-docker",
                "with": {
                  "repository": "camunda/zeebe",
                  "version": "SNAPSHOT",
                  "platforms": "${{ env.DOCKER_PLATFORMS }}",
                  "push": true,
                  "distball": "${{ steps.build-zeebe.outputs.distball }}"
                }
              }
            ],
            "id-in-workflow": "deploy-docker-snapshot"
          },
          "language": "java"
        },
        {
          "build_job": "3511.18",
          "job_id": 11295269233,
          "config": {
            "name": "Deploy snapshot artifacts",
            "needs": [
              "test-summary"
            ],
            "runs-on": "ubuntu-latest",
            "if": "github.repository == 'camunda/zeebe' && github.ref == 'refs/heads/main'",
            "concurrency": {
              "group": "deploy-maven-snapshot",
              "cancel-in-progress": false
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "name": "Import Secrets",
                "id": "secrets",
                "uses": "hashicorp/vault-action@v2.5.0",
                "with": {
                  "url": "${{ secrets.VAULT_ADDR }}",
                  "method": "approle",
                  "roleId": "${{ secrets.VAULT_ROLE_ID }}",
                  "secretId": "${{ secrets.VAULT_SECRET_ID }}",
                  "secrets": "secret/data/products/zeebe/ci/zeebe ARTIFACTS_USR;\nsecret/data/products/zeebe/ci/zeebe ARTIFACTS_PSW;\n"
                }
              },
              {
                "uses": "actions/setup-java@v3.10.0",
                "with": {
                  "distribution": "temurin",
                  "java-version": "17"
                }
              },
              {
                "name": "Create settings.xml",
                "uses": "s4u/maven-settings-action@v2.8.0",
                "with": {
                  "githubServer": false,
                  "servers": "[{\n  \"id\": \"camunda-nexus\",\n  \"username\": \"${{ steps.secrets.outputs.ARTIFACTS_USR }}\",\n  \"password\": \"${{ steps.secrets.outputs.ARTIFACTS_PSW }}\"\n}]\n",
                  "mirrors": "[{\"url\": \"https://repository.nexus.camunda.cloud/content/groups/internal/\", \"id\": \"camunda-nexus\", \"mirrorOf\": \"zeebe,zeebe-snapshots\", \"name\": \"camunda Nexus\"}]"
                }
              },
              {
                "run": "mvn -B -D skipTests -D skipChecks compile generate-sources source:jar javadoc:jar deploy",
                "env": {
                  "MAVEN_USERNAME": "${{ steps.secrets.outputs.ARTIFACTS_USR }}",
                  "MAVEN_PASSWORD": "${{ steps.secrets.outputs.ARTIFACTS_PSW }}"
                }
              }
            ],
            "id-in-workflow": "deploy-snapshots"
          },
          "language": "java"
        },
        {
          "build_job": "3511.19",
          "job_id": 11295269445,
          "config": {
            "name": "Auto-merge dependabot PRs",
            "runs-on": "ubuntu-latest",
            "needs": [
              "test-summary"
            ],
            "if": "github.repository == 'camunda/zeebe' && github.actor == 'dependabot[bot]'",
            "permissions": {
              "checks": "read",
              "pull-requests": "write"
            },
            "steps": [
              {
                "uses": "actions/checkout@v3"
              },
              {
                "id": "metadata",
                "name": "Fetch dependency metadata",
                "uses": "dependabot/fetch-metadata@v1.3.6",
                "with": {
                  "github-token": "${{ secrets.GITHUB_TOKEN }}"
                }
              },
              {
                "id": "approve-and-merge",
                "name": "Approve and merge PR",
                "if": "steps.metadata.outputs.update-type == 'version-update:semver-patch'",
                "run": "gh pr review ${{ github.event.pull_request.number }} --approve -b \"bors merge\"",
                "env": {
                  "GITHUB_TOKEN": "${{secrets.GITHUB_TOKEN}}"
                }
              }
            ],
            "id-in-workflow": "auto-merge"
          },
          "language": "java"
        },
        {
          "build_job": "3511.20",
          "job_id": 11295269719,
          "config": {
            "name": "Send slack notification on build failure",
            "runs-on": "ubuntu-latest",
            "needs": [
              "test-summary",
              "deploy-snapshots",
              "deploy-docker-snapshot"
            ],
            "if": "failure() && github.repository == 'camunda/zeebe' && github.ref == 'refs/heads/main'",
            "steps": [
              {
                "id": "slack-notify",
                "name": "Send slack notification",
                "uses": "slackapi/slack-github-action@v1.23.0",
                "with": {
                  "payload": "{\n  \"text\": \":alarm: Build on `main` failed! :alarm:\\n${{ github.event.head_commit.url }}\",\n \t\"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \":alarm: Build on `main` failed! :alarm:\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"Please check the related commit: ${{ github.event.head_commit.url }}\\n \\\\cc @zeebe-medic\"\n      }\n    }\n  ]\n}\n"
                },
                "env": {
                  "SLACK_WEBHOOK_URL": "${{ secrets.SLACK_WEBHOOK_URL }}",
                  "SLACK_WEBHOOK_TYPE": "INCOMING_WEBHOOK"
                }
              }
            ],
            "id-in-workflow": "notify-if-failed"
          },
          "language": "java"
        },
        {
          "build_job": "3511.21",
          "job_id": 11295295030,
          "config": {},
          "language": "java"
        }
      ],
      "has_submodules": false
    },
    "jobpairs": [
      {
        "failed_job": {
          "job_id": 11293751320
        },
        "passed_job": {
          "job_id": 11294854531
        },
        "failed_step_kind": "run",
        "failed_step_command": "mvn -T1C -B --no-snapshot-updates -P parallel-tests,include-random-tests -D junitThreadCount=16 -D skipChecks test | tee \"${BUILD_OUTPUT_FILE_PATH}\"\n",
        "build_system": "Maven",
        "filtered_reason": null
      }
    ]
  }
]