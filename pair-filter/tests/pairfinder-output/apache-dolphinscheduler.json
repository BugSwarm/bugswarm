[{"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "github-issue-link", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9528594003, "travis_merge_sha": null, "base_sha": "", "head_sha": "067bc8e78be9196f1dd082984682f7a914c62a17", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T13:57:54Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "19187.1", "job_id": 26266445901, "config": {"name": "E2E-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 7}, {"build_job": "19187.2", "job_id": 26266447527, "config": {"name": "E2E-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci \\\n-pl dolphinscheduler-standalone-server -am\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 68}, {"build_job": "19187.3", "job_id": 26266457500, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "19187.4", "job_id": 26266457540, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "19187.5", "job_id": 26266457574, "config": {"name": "E2E", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["e2e", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip E2E!\"\n  exit 0\nfi\nif [[ ${{ needs.e2e.result }} != 'success' ]]; then\n  echo \"E2E Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9528617737, "travis_merge_sha": null, "base_sha": "", "head_sha": "d8fdcd37f873168625e3984bbc7591e305cb452d", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T14:02:58Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "19188.1", "job_id": 26266501035, "config": {}, "language": "java", "run_time_seconds": 10}, {"build_job": "19188.2", "job_id": 26266505074, "config": {}, "language": "java", "run_time_seconds": 690}, {"build_job": "19188.3", "job_id": 26266658281, "config": {}, "language": "java", "run_time_seconds": 233}, {"build_job": "19188.4", "job_id": 26266658512, "config": {}, "language": "java", "run_time_seconds": 179}, {"build_job": "19188.5", "job_id": 26266658607, "config": {}, "language": "java", "run_time_seconds": 293}, {"build_job": "19188.6", "job_id": 26266658685, "config": {}, "language": "java", "run_time_seconds": 183}, {"build_job": "19188.7", "job_id": 26266658794, "config": {}, "language": "java", "run_time_seconds": 213}, {"build_job": "19188.8", "job_id": 26266658881, "config": {}, "language": "java", "run_time_seconds": 189}, {"build_job": "19188.9", "job_id": 26266658973, "config": {}, "language": "java", "run_time_seconds": 181}, {"build_job": "19188.10", "job_id": 26266659084, "config": {}, "language": "java", "run_time_seconds": 194}, {"build_job": "19188.11", "job_id": 26266659188, "config": {}, "language": "java", "run_time_seconds": 218}, {"build_job": "19188.12", "job_id": 26266659273, "config": {}, "language": "java", "run_time_seconds": 185}, {"build_job": "19188.13", "job_id": 26266659359, "config": {}, "language": "java", "run_time_seconds": 316}, {"build_job": "19188.14", "job_id": 26266659465, "config": {}, "language": "java", "run_time_seconds": 267}, {"build_job": "19188.15", "job_id": 26266659565, "config": {}, "language": "java", "run_time_seconds": 293}, {"build_job": "19188.16", "job_id": 26266659678, "config": {}, "language": "java", "run_time_seconds": 349}, {"build_job": "19188.17", "job_id": 26266659792, "config": {}, "language": "java", "run_time_seconds": 238}, {"build_job": "19188.18", "job_id": 26266659916, "config": {}, "language": "java", "run_time_seconds": 214}, {"build_job": "19188.19", "job_id": 26266660027, "config": {}, "language": "java", "run_time_seconds": 214}, {"build_job": "19188.20", "job_id": 26266660131, "config": {}, "language": "java", "run_time_seconds": 213}, {"build_job": "19188.21", "job_id": 26266660224, "config": {}, "language": "java", "run_time_seconds": 236}, {"build_job": "19188.22", "job_id": 26266737092, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "github-issue-link", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9528594009, "travis_merge_sha": null, "base_sha": "", "head_sha": "067bc8e78be9196f1dd082984682f7a914c62a17", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T13:57:54Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "11744.1", "job_id": 26266445935, "config": {"name": "API-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "11744.2", "job_id": 26266447478, "config": {"name": "API-Test-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 66}, {"build_job": "11744.3", "job_id": 26266457329, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "11744.4", "job_id": 26266457380, "config": {"name": "API-Test-Result", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["api-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9528617731, "travis_merge_sha": null, "base_sha": "", "head_sha": "d8fdcd37f873168625e3984bbc7591e305cb452d", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T14:02:58Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "11745.1", "job_id": 26266500973, "config": {"name": "API-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "11745.2", "job_id": 26266503894, "config": {"name": "API-Test-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 771}, {"build_job": "11745.3", "job_id": 26266675874, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Tenant", "class": "org.apache.dolphinscheduler.api.test.cases.TenantAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 162}, {"build_job": "11745.4", "job_id": 26266675996, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "WorkerGroup", "class": "org.apache.dolphinscheduler.api.test.cases.WorkerGroupAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 190}, {"build_job": "11745.5", "job_id": 26266676115, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Project", "class": "org.apache.dolphinscheduler.api.test.cases.ProjectAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 161}, {"build_job": "11745.6", "job_id": 26266676207, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Workflow", "class": "org.apache.dolphinscheduler.api.test.cases.ProcessDefinitionAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 199}, {"build_job": "11745.7", "job_id": 26266676295, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Scheduler", "class": "org.apache.dolphinscheduler.api.test.cases.SchedulerAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 189}, {"build_job": "11745.8", "job_id": 26266676369, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Executor", "class": "org.apache.dolphinscheduler.api.test.cases.ExecutorAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 166}, {"build_job": "11745.9", "job_id": 26266676456, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "ProcessInstance", "class": "org.apache.dolphinscheduler.api.test.cases.ProcessInstanceAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 173}, {"build_job": "11745.10", "job_id": 26266722471, "config": {"name": "API-Test-Result", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["api-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26266447478}, "passed_job": {"job_id": 26266503894}, "failed_step_kind": "uses", "failed_step_command": "./.github/actions/sanity-check", "build_system": "Maven"}, {"failed_job": {"job_id": 26266457380}, "passed_job": {"job_id": 26266722471}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "github-issue-link", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9528594000, "travis_merge_sha": null, "base_sha": "", "head_sha": "067bc8e78be9196f1dd082984682f7a914c62a17", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T13:57:54Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "5703.1", "job_id": 26266445834, "config": {"name": "Frontend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 5}, {"build_job": "5703.2", "job_id": 26266447057, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "ubuntu-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 67}, {"build_job": "5703.3", "job_id": 26266447119, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "macos-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 86}, {"build_job": "5703.4", "job_id": 26266459745, "config": {"name": "Frontend Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter"], "if": "always()", "steps": [{"uses": "actions/checkout@v2"}, {"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 7}], "has_submodules": true}, "passed_build": {"build_id": 9528617735, "travis_merge_sha": null, "base_sha": "", "head_sha": "d8fdcd37f873168625e3984bbc7591e305cb452d", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T14:02:58Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "5704.1", "job_id": 26266500969, "config": {"name": "Frontend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 9}, {"build_job": "5704.2", "job_id": 26266505181, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "ubuntu-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 179}, {"build_job": "5704.3", "job_id": 26266505316, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "macos-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 88}, {"build_job": "5704.4", "job_id": 26266551641, "config": {"name": "Frontend Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter"], "if": "always()", "steps": [{"uses": "actions/checkout@v2"}, {"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 5}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26266447057}, "passed_job": {"job_id": 26266505181}, "failed_step_kind": "uses", "failed_step_command": "./.github/actions/sanity-check", "build_system": "Maven"}, {"failed_job": {"job_id": 26266459745}, "passed_job": {"job_id": 26266551641}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "github-issue-link", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9528594001, "travis_merge_sha": null, "base_sha": "", "head_sha": "067bc8e78be9196f1dd082984682f7a914c62a17", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T13:57:54Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "16906.1", "job_id": 26266445863, "config": {"name": "Backend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}", "db-schema": "${{ steps.filter.outputs.db-schema }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\ndb-schema:\n  - 'dolphinscheduler-dao/src/main/resources/sql/**'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 7}, {"build_job": "16906.2", "job_id": 26266447938, "config": {"name": "Backend-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 30, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-backend", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build and Package on ${{ matrix.java }}", "run": "./mvnw -B clean install \\\n       -Prelease \\\n       -Dmaven.test.skip=true \\\n       -Dspotless.skip=true \\\n       -Dhttp.keepAlive=false \\\n       -Dmaven.wagon.http.pool=false \\\n       -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n"}, {"name": "Check dependency license", "run": "tools/dependencies/check-LICENSE.sh"}, {"uses": "actions/upload-artifact@v2", "if": "${{ matrix.java == '8' }}", "name": "Upload Binary Package", "with": {"name": "binary-package-${{ matrix.java }}", "path": "./dolphinscheduler-dist/target/apache-dolphinscheduler-*-SNAPSHOT-bin.tar.gz", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 73}, {"build_job": "16906.3", "job_id": 26266448020, "config": {"name": "Backend-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 30, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-backend", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build and Package on ${{ matrix.java }}", "run": "./mvnw -B clean install \\\n       -Prelease \\\n       -Dmaven.test.skip=true \\\n       -Dspotless.skip=true \\\n       -Dhttp.keepAlive=false \\\n       -Dmaven.wagon.http.pool=false \\\n       -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n"}, {"name": "Check dependency license", "run": "tools/dependencies/check-LICENSE.sh"}, {"uses": "actions/upload-artifact@v2", "if": "${{ matrix.java == '8' }}", "name": "Upload Binary Package", "with": {"name": "binary-package-${{ matrix.java }}", "path": "./dolphinscheduler-dist/target/apache-dolphinscheduler-*-SNAPSHOT-bin.tar.gz", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 81}, {"build_job": "16906.4", "job_id": 26266460166, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16906.5", "job_id": 26266460329, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16906.6", "job_id": 26266460447, "config": {"name": "Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter", "cluster-test", "schema-check"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ needs.paths-filter.outputs.db-schema }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' || ${{ needs.cluster-test.result }} != 'success' ]]; then\n  echo \"Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9528617733, "travis_merge_sha": null, "base_sha": "", "head_sha": "d8fdcd37f873168625e3984bbc7591e305cb452d", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T14:02:58Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "16907.1", "job_id": 26266500974, "config": {}, "language": "java", "run_time_seconds": 6}, {"build_job": "16907.2", "job_id": 26266504377, "config": {}, "language": "java", "run_time_seconds": 749}, {"build_job": "16907.3", "job_id": 26266504451, "config": {}, "language": "java", "run_time_seconds": 723}, {"build_job": "16907.4", "job_id": 26266671014, "config": {}, "language": "java", "run_time_seconds": 192}, {"build_job": "16907.5", "job_id": 26266671061, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16907.6", "job_id": 26266671100, "config": {}, "language": "java", "run_time_seconds": 213}, {"build_job": "16907.7", "job_id": 26266671130, "config": {}, "language": "java", "run_time_seconds": 186}, {"build_job": "16907.8", "job_id": 26266671170, "config": {}, "language": "java", "run_time_seconds": 649}, {"build_job": "16907.9", "job_id": 26266808803, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "github-issue-link", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9528617730, "travis_merge_sha": null, "base_sha": "", "head_sha": "d8fdcd37f873168625e3984bbc7591e305cb452d", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T14:02:58Z", "message": "chore: add issue link tempate for IDEA\n\nSigned-off-by: Gallardot <gallardot@apache.org>", "jobs": [{"build_job": "19195.1", "job_id": 26266500961, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "19195.2", "job_id": 26266503667, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 1555}, {"build_job": "19195.3", "job_id": 26266503807, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 1571}, {"build_job": "19195.4", "job_id": 26266844559, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9558382493, "travis_merge_sha": null, "base_sha": "", "head_sha": "2b1ca1ac4009af7b4aab431efbc012ca97c3680a", "github_archived": true, "resettable": true, "committed_at": "2024-06-18T03:15:00Z", "message": "Merge branch 'dev' into github-issue-link", "jobs": [{"build_job": "19258.1", "job_id": 26347013690, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 4}, {"build_job": "19258.2", "job_id": 26347017913, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2010}, {"build_job": "19258.3", "job_id": 26347018076, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2201}, {"build_job": "19258.4", "job_id": 26347786214, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26266503667}, "passed_job": {"job_id": 26347017913}, "failed_step_kind": "run", "failed_step_command": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false", "build_system": "Maven"}, {"failed_job": {"job_id": 26266844559}, "passed_job": {"job_id": 26347786214}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "chore/codeowner", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544344236, "travis_merge_sha": null, "base_sha": "", "head_sha": "65edd9ed0e9d3235e35c7e952334c0f413393750", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T08:21:39Z", "message": "Merge branch 'dev' into chore/codeowner", "jobs": [{"build_job": "19220.1", "job_id": 26302823225, "config": {"name": "E2E-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "19220.2", "job_id": 26302831975, "config": {"name": "E2E-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci \\\n-pl dolphinscheduler-standalone-server -am\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 577}, {"build_job": "19220.3", "job_id": 26303249387, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "SqlServerDataSource", "class": "org.apache.dolphinscheduler.e2e.cases.SqlServerDataSourceE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e-optional"}, "language": "java", "run_time_seconds": 249}, {"build_job": "19220.4", "job_id": 26303249673, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "HiveDataSource", "class": "org.apache.dolphinscheduler.e2e.cases.HiveDataSourceE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e-optional"}, "language": "java", "run_time_seconds": 336}, {"build_job": "19220.5", "job_id": 26303250194, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Tenant", "class": "org.apache.dolphinscheduler.e2e.cases.TenantE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 199}, {"build_job": "19220.6", "job_id": 26303250463, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "User", "class": "org.apache.dolphinscheduler.e2e.cases.UserE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 210}, {"build_job": "19220.7", "job_id": 26303250710, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "WorkerGroup", "class": "org.apache.dolphinscheduler.e2e.cases.WorkerGroupE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 229}, {"build_job": "19220.8", "job_id": 26303251003, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Project", "class": "org.apache.dolphinscheduler.e2e.cases.ProjectE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 230}, {"build_job": "19220.9", "job_id": 26303251260, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Queue", "class": "org.apache.dolphinscheduler.e2e.cases.QueueE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 226}, {"build_job": "19220.10", "job_id": 26303251543, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Environment", "class": "org.apache.dolphinscheduler.e2e.cases.EnvironmentE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 226}, {"build_job": "19220.11", "job_id": 26303251824, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Cluster", "class": "org.apache.dolphinscheduler.e2e.cases.ClusterE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 191}, {"build_job": "19220.12", "job_id": 26303252096, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Token", "class": "org.apache.dolphinscheduler.e2e.cases.TokenE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 234}, {"build_job": "19220.13", "job_id": 26303252360, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Workflow", "class": "org.apache.dolphinscheduler.e2e.cases.WorkflowE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 317}, {"build_job": "19220.14", "job_id": 26303252664, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "WorkflowHttp", "class": "org.apache.dolphinscheduler.e2e.cases.WorkflowHttpTaskE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 267}, {"build_job": "19220.15", "job_id": 26303252935, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "WorkflowJava", "class": "org.apache.dolphinscheduler.e2e.cases.WorkflowJavaTaskE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 288}, {"build_job": "19220.16", "job_id": 26303253252, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "FileManage", "class": "org.apache.dolphinscheduler.e2e.cases.FileManageE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 336}, {"build_job": "19220.17", "job_id": 26303253532, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "UdfManage", "class": "org.apache.dolphinscheduler.e2e.cases.UdfManageE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 243}, {"build_job": "19220.18", "job_id": 26303253825, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "FunctionManage", "class": "org.apache.dolphinscheduler.e2e.cases.FunctionManageE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 236}, {"build_job": "19220.19", "job_id": 26303254095, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "MysqlDataSource", "class": "org.apache.dolphinscheduler.e2e.cases.MysqlDataSourceE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 220}, {"build_job": "19220.20", "job_id": 26303254408, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "ClickhouseDataSource", "class": "org.apache.dolphinscheduler.e2e.cases.ClickhouseDataSourceE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 323}, {"build_job": "19220.21", "job_id": 26303254652, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "PostgresDataSource", "class": "org.apache.dolphinscheduler.e2e.cases.PostgresDataSourceE2ETest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-e2e/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "e2e"}, "language": "java", "run_time_seconds": 223}, {"build_job": "19220.22", "job_id": 26303523027, "config": {"name": "E2E", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["e2e", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip E2E!\"\n  exit 0\nfi\nif [[ ${{ needs.e2e.result }} != 'success' ]]; then\n  echo \"E2E Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9545551536, "travis_merge_sha": null, "base_sha": "", "head_sha": "1c154f2e038821fd96eacca82d239255d6473f1a", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:46:40Z", "message": "Merge branch 'dev' into chore/codeowner", "jobs": [{"build_job": "19235.1", "job_id": 26306544050, "config": {}, "language": "java", "run_time_seconds": 5}, {"build_job": "19235.2", "job_id": 26306553096, "config": {}, "language": "java", "run_time_seconds": 536}, {"build_job": "19235.3", "job_id": 26306929196, "config": {}, "language": "java", "run_time_seconds": 284}, {"build_job": "19235.4", "job_id": 26306930054, "config": {}, "language": "java", "run_time_seconds": 504}, {"build_job": "19235.5", "job_id": 26306930322, "config": {}, "language": "java", "run_time_seconds": 293}, {"build_job": "19235.6", "job_id": 26306930646, "config": {}, "language": "java", "run_time_seconds": 195}, {"build_job": "19235.7", "job_id": 26306930910, "config": {}, "language": "java", "run_time_seconds": 185}, {"build_job": "19235.8", "job_id": 26306931245, "config": {}, "language": "java", "run_time_seconds": 194}, {"build_job": "19235.9", "job_id": 26306931500, "config": {}, "language": "java", "run_time_seconds": 199}, {"build_job": "19235.10", "job_id": 26306931744, "config": {}, "language": "java", "run_time_seconds": 235}, {"build_job": "19235.11", "job_id": 26306931968, "config": {}, "language": "java", "run_time_seconds": 236}, {"build_job": "19235.12", "job_id": 26306932235, "config": {}, "language": "java", "run_time_seconds": 228}, {"build_job": "19235.13", "job_id": 26306932467, "config": {}, "language": "java", "run_time_seconds": 360}, {"build_job": "19235.14", "job_id": 26306932727, "config": {}, "language": "java", "run_time_seconds": 269}, {"build_job": "19235.15", "job_id": 26306932963, "config": {}, "language": "java", "run_time_seconds": 275}, {"build_job": "19235.16", "job_id": 26306933179, "config": {}, "language": "java", "run_time_seconds": 426}, {"build_job": "19235.17", "job_id": 26306933384, "config": {}, "language": "java", "run_time_seconds": 283}, {"build_job": "19235.18", "job_id": 26306933632, "config": {}, "language": "java", "run_time_seconds": 231}, {"build_job": "19235.19", "job_id": 26306933885, "config": {}, "language": "java", "run_time_seconds": 298}, {"build_job": "19235.20", "job_id": 26306934136, "config": {}, "language": "java", "run_time_seconds": 305}, {"build_job": "19235.21", "job_id": 26306934367, "config": {}, "language": "java", "run_time_seconds": 219}, {"build_job": "19235.22", "job_id": 26307302152, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986532, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "16944.1", "job_id": 26304820802, "config": {"name": "Backend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}", "db-schema": "${{ steps.filter.outputs.db-schema }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\ndb-schema:\n  - 'dolphinscheduler-dao/src/main/resources/sql/**'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "16944.2", "job_id": 26304830862, "config": {"name": "Backend-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 30, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-backend", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build and Package on ${{ matrix.java }}", "run": "./mvnw -B clean install \\\n       -Prelease \\\n       -Dmaven.test.skip=true \\\n       -Dspotless.skip=true \\\n       -Dhttp.keepAlive=false \\\n       -Dmaven.wagon.http.pool=false \\\n       -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n"}, {"name": "Check dependency license", "run": "tools/dependencies/check-LICENSE.sh"}, {"uses": "actions/upload-artifact@v2", "if": "${{ matrix.java == '8' }}", "name": "Upload Binary Package", "with": {"name": "binary-package-${{ matrix.java }}", "path": "./dolphinscheduler-dist/target/apache-dolphinscheduler-*-SNAPSHOT-bin.tar.gz", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 8}, {"build_job": "16944.3", "job_id": 26304831174, "config": {"name": "Backend-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 30, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-backend", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build and Package on ${{ matrix.java }}", "run": "./mvnw -B clean install \\\n       -Prelease \\\n       -Dmaven.test.skip=true \\\n       -Dspotless.skip=true \\\n       -Dhttp.keepAlive=false \\\n       -Dmaven.wagon.http.pool=false \\\n       -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n"}, {"name": "Check dependency license", "run": "tools/dependencies/check-LICENSE.sh"}, {"uses": "actions/upload-artifact@v2", "if": "${{ matrix.java == '8' }}", "name": "Upload Binary Package", "with": {"name": "binary-package-${{ matrix.java }}", "path": "./dolphinscheduler-dist/target/apache-dolphinscheduler-*-SNAPSHOT-bin.tar.gz", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 6}, {"build_job": "16944.4", "job_id": 26304843714, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16944.5", "job_id": 26304844132, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16944.6", "job_id": 26304844442, "config": {"name": "Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter", "cluster-test", "schema-check"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ needs.paths-filter.outputs.db-schema }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' || ${{ needs.cluster-test.result }} != 'success' ]]; then\n  echo \"Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 1}], "has_submodules": true}, "passed_build": {"build_id": 9545133982, "travis_merge_sha": null, "base_sha": "", "head_sha": "a46be4983f4c4c7d2423d1f2c1247ab1be675c6c", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:16:50Z", "message": "Merge branch 'dev' into ci_pr_test", "jobs": [{"build_job": "16949.1", "job_id": 26305292167, "config": {}, "language": "java", "run_time_seconds": 4}, {"build_job": "16949.2", "job_id": 26305300957, "config": {}, "language": "java", "run_time_seconds": 700}, {"build_job": "16949.3", "job_id": 26305301323, "config": {}, "language": "java", "run_time_seconds": 671}, {"build_job": "16949.4", "job_id": 26305820127, "config": {}, "language": "java", "run_time_seconds": 180}, {"build_job": "16949.5", "job_id": 26305820612, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16949.6", "job_id": 26305820862, "config": {}, "language": "java", "run_time_seconds": 192}, {"build_job": "16949.7", "job_id": 26305821104, "config": {}, "language": "java", "run_time_seconds": 205}, {"build_job": "16949.8", "job_id": 26305821393, "config": {}, "language": "java", "run_time_seconds": 892}, {"build_job": "16949.9", "job_id": 26306451108, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986511, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "5741.1", "job_id": 26304820908, "config": {"name": "Frontend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 7}, {"build_job": "5741.2", "job_id": 26304831811, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "ubuntu-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 7}, {"build_job": "5741.3", "job_id": 26304832128, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "macos-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 9}, {"build_job": "5741.4", "job_id": 26304843473, "config": {"name": "Frontend Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter"], "if": "always()", "steps": [{"uses": "actions/checkout@v2"}, {"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 4}], "has_submodules": true}, "passed_build": {"build_id": 9545012657, "travis_merge_sha": null, "base_sha": "", "head_sha": "ddda52cbfb881f4241d7ff2f5311115fc1742d11", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:08:25Z", "message": "ci_test", "jobs": [{"build_job": "5743.1", "job_id": 26304899204, "config": {"name": "Frontend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 5}, {"build_job": "5743.2", "job_id": 26304908547, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "ubuntu-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 192}, {"build_job": "5743.3", "job_id": 26304908818, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "macos-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 106}, {"build_job": "5743.4", "job_id": 26305056186, "config": {"name": "Frontend Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter"], "if": "always()", "steps": [{"uses": "actions/checkout@v2"}, {"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 5}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26304831811}, "passed_job": {"job_id": 26304908547}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v2", "build_system": "Maven"}, {"failed_job": {"job_id": 26304832128}, "passed_job": {"job_id": 26304908818}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v2", "build_system": "Maven"}, {"failed_job": {"job_id": 26304843473}, "passed_job": {"job_id": 26305056186}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986510, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "19234.1", "job_id": 26304820446, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 8}, {"build_job": "19234.2", "job_id": 26304832810, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 4}, {"build_job": "19234.3", "job_id": 26304833124, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 4}, {"build_job": "19234.4", "job_id": 26304842579, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9545133962, "travis_merge_sha": null, "base_sha": "", "head_sha": "a46be4983f4c4c7d2423d1f2c1247ab1be675c6c", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:16:50Z", "message": "Merge branch 'dev' into ci_pr_test", "jobs": [{"build_job": "19240.1", "job_id": 26305287997, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 5}, {"build_job": "19240.2", "job_id": 26305297278, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2057}, {"build_job": "19240.3", "job_id": 26305297610, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2057}, {"build_job": "19240.4", "job_id": 26306763480, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26304832810}, "passed_job": {"job_id": 26305297278}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v2", "build_system": "Maven"}, {"failed_job": {"job_id": 26304833124}, "passed_job": {"job_id": 26305297610}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v2", "build_system": "Maven"}, {"failed_job": {"job_id": 26304842579}, "passed_job": {"job_id": 26306763480}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986513, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "8632.1", "job_id": 26304820462, "config": {"if": "(github.event_name == 'schedule' && github.repository == 'apache/dolphinscheduler') || (github.event_name != 'schedule')", "name": "Analyze", "runs-on": "ubuntu-latest", "steps": [{"name": "Checkout repository", "uses": "actions/checkout@v3", "with": {"submodules": true}}, {"name": "Initialize CodeQL", "uses": "github/codeql-action/init@v2", "with": {"languages": "java", "queries": "+security-and-quality"}}, {"run": "./mvnw -B clean install \\\n  -Dmaven.test.skip \\\n  -Dmaven.javadoc.skip \\\n  -Dspotless.skip=true \\\n  -Prelease\n"}, {"name": "Perform CodeQL Analysis", "uses": "github/codeql-action/analyze@v2"}], "id-in-workflow": "analyze"}, "language": "java", "run_time_seconds": 8}], "has_submodules": true}, "passed_build": {"build_id": 9545133961, "travis_merge_sha": null, "base_sha": "", "head_sha": "a46be4983f4c4c7d2423d1f2c1247ab1be675c6c", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:16:50Z", "message": "Merge branch 'dev' into ci_pr_test", "jobs": [{"build_job": "8638.1", "job_id": 26305287598, "config": {"if": "(github.event_name == 'schedule' && github.repository == 'apache/dolphinscheduler') || (github.event_name != 'schedule')", "name": "Analyze", "runs-on": "ubuntu-latest", "steps": [{"name": "Checkout repository", "uses": "actions/checkout@v3", "with": {"submodules": true}}, {"name": "Initialize CodeQL", "uses": "github/codeql-action/init@v2", "with": {"languages": "java", "queries": "+security-and-quality"}}, {"run": "./mvnw -B clean install \\\n  -Dmaven.test.skip \\\n  -Dmaven.javadoc.skip \\\n  -Dspotless.skip=true \\\n  -Prelease\n"}, {"name": "Perform CodeQL Analysis", "uses": "github/codeql-action/analyze@v2"}], "id-in-workflow": "analyze"}, "language": "java", "run_time_seconds": 1415}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26304820462}, "passed_job": {"job_id": 26305287598}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v3", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986521, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "19227.1", "job_id": 26304821083, "config": {"name": "E2E-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 8}, {"build_job": "19227.2", "job_id": 26304833918, "config": {"name": "E2E-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci \\\n-pl dolphinscheduler-standalone-server -am\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 5}, {"build_job": "19227.3", "job_id": 26304842051, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "19227.4", "job_id": 26304842469, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "19227.5", "job_id": 26304842863, "config": {"name": "E2E", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["e2e", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip E2E!\"\n  exit 0\nfi\nif [[ ${{ needs.e2e.result }} != 'success' ]]; then\n  echo \"E2E Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9545133950, "travis_merge_sha": null, "base_sha": "", "head_sha": "a46be4983f4c4c7d2423d1f2c1247ab1be675c6c", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:16:50Z", "message": "Merge branch 'dev' into ci_pr_test", "jobs": [{"build_job": "19233.1", "job_id": 26305278503, "config": {}, "language": "java", "run_time_seconds": 5}, {"build_job": "19233.2", "job_id": 26305287921, "config": {}, "language": "java", "run_time_seconds": 595}, {"build_job": "19233.3", "job_id": 26305725558, "config": {}, "language": "java", "run_time_seconds": 178}, {"build_job": "19233.4", "job_id": 26305726259, "config": {}, "language": "java", "run_time_seconds": 185}, {"build_job": "19233.5", "job_id": 26305726548, "config": {}, "language": "java", "run_time_seconds": 253}, {"build_job": "19233.6", "job_id": 26305726835, "config": {}, "language": "java", "run_time_seconds": 175}, {"build_job": "19233.7", "job_id": 26305727125, "config": {}, "language": "java", "run_time_seconds": 274}, {"build_job": "19233.8", "job_id": 26305727446, "config": {}, "language": "java", "run_time_seconds": 180}, {"build_job": "19233.9", "job_id": 26305727772, "config": {}, "language": "java", "run_time_seconds": 211}, {"build_job": "19233.10", "job_id": 26305728068, "config": {}, "language": "java", "run_time_seconds": 191}, {"build_job": "19233.11", "job_id": 26305728340, "config": {}, "language": "java", "run_time_seconds": 189}, {"build_job": "19233.12", "job_id": 26305728620, "config": {}, "language": "java", "run_time_seconds": 189}, {"build_job": "19233.13", "job_id": 26305728864, "config": {}, "language": "java", "run_time_seconds": 294}, {"build_job": "19233.14", "job_id": 26305729104, "config": {}, "language": "java", "run_time_seconds": 252}, {"build_job": "19233.15", "job_id": 26305729411, "config": {}, "language": "java", "run_time_seconds": 290}, {"build_job": "19233.16", "job_id": 26305729829, "config": {}, "language": "java", "run_time_seconds": 394}, {"build_job": "19233.17", "job_id": 26305730192, "config": {}, "language": "java", "run_time_seconds": 232}, {"build_job": "19233.18", "job_id": 26305730459, "config": {}, "language": "java", "run_time_seconds": 208}, {"build_job": "19233.19", "job_id": 26305730773, "config": {}, "language": "java", "run_time_seconds": 210}, {"build_job": "19233.20", "job_id": 26305731054, "config": {}, "language": "java", "run_time_seconds": 212}, {"build_job": "19233.21", "job_id": 26305731340, "config": {}, "language": "java", "run_time_seconds": 214}, {"build_job": "19233.22", "job_id": 26306022272, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986518, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "3979.1", "job_id": 26304820543, "config": {"name": "E2E-K8S-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 8}, {"build_job": "3979.2", "job_id": 26304833441, "config": {"name": "E2E-K8S-Execute", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Build Image", "run": "./mvnw -B clean package \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Dmaven.checkstyle.skip \\\n-Dmaven.deploy.skip \\\n-Ddocker.push.skip=true \\\n-Pdocker,release -Ddocker.tag=ci \\\n-pl org.apache.dolphinscheduler:dolphinscheduler-alert-server \\\n-pl dolphinscheduler-tools \\\n-pl dolphinscheduler-api \\\n-pl dolphinscheduler-master \\\n-pl dolphinscheduler-worker -am\n"}, {"name": "Create k8s Kind Cluster", "run": "# install kubectl\ncurl -LO \"https://dl.k8s.io/release/v1.28.3/bin/linux/amd64/kubectl\"\nsudo chmod +x kubectl\nsudo mv kubectl /usr/local/bin/kubectl\n\n# install kind\ncurl -LO https://github.com/kubernetes-sigs/kind/releases/download/v0.20.0/kind-linux-amd64\nsudo chmod +x kind-linux-amd64\nsudo mv kind-linux-amd64 /usr/local/bin/kind\nkind version\n\n# create kind cluster\nkind_node_image=\"kindest/node:v1.23.17\"\necho \"Kubernetes version: ${kind_node_image}\"\nkind create cluster --name dolphinscheduler --image ${kind_node_image}\nkubectl version\nkubectl get all --all-namespaces\n"}, {"name": "Load images", "run": "components=(\"master\" \"worker\" \"api\" \"tools\" \"alert-server\")\nfor component in \"${components[@]}\"; do\n  kind load docker-image apache/dolphinscheduler-${component}:ci --name dolphinscheduler\ndone\n"}, {"name": "Helm install dolphinscheduler", "working-directory": "${{ github.workspace }}/deploy/kubernetes/dolphinscheduler", "run": "# install helm\ncurl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n\n# install ds chart via helm\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm dependency update .\nhelm upgrade --install --create-namespace -n dolphinscheduler dolphinscheduler . -f - <<EOF\nimage:\n  registry: apache\n  tag: ci\nmaster:\n  replicas: 1\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\nworker:\n  replicas: 1\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\nalert:\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\napi:\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\nEOF\n"}, {"name": "Wait for pods", "run": "JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; \ncomponents=(\"master\" \"worker\" \"api\" \"alert\")\nfor component in \"${components[@]}\"; do\n  until kubectl -n dolphinscheduler get pods -l app.kubernetes.io/component=${component} -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n    echo \"waiting for dolphinscheduler ${component} to be available\"\n    sleep 10\n    kubectl get pods --all-namespaces\n    kubectl get events --all-namespaces\n    for pod in $(kubectl get pods -n dolphinscheduler -o jsonpath='{.items[*].metadata.name}'); do\n      echo \"logs for pod $pod:\"\n      kubectl logs --tail=1000 -n dolphinscheduler $pod\n    done\n  done\ndone\n"}], "id-in-workflow": "e2e-k8s"}, "language": "java", "run_time_seconds": 5}], "has_submodules": true}, "passed_build": {"build_id": 9545133942, "travis_merge_sha": null, "base_sha": "", "head_sha": "a46be4983f4c4c7d2423d1f2c1247ab1be675c6c", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:16:50Z", "message": "Merge branch 'dev' into ci_pr_test", "jobs": [{"build_job": "3985.1", "job_id": 26305279645, "config": {"name": "E2E-K8S-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "3985.2", "job_id": 26305288744, "config": {"name": "E2E-K8S-Execute", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Build Image", "run": "./mvnw -B clean package \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Dmaven.checkstyle.skip \\\n-Dmaven.deploy.skip \\\n-Ddocker.push.skip=true \\\n-Pdocker,release -Ddocker.tag=ci \\\n-pl org.apache.dolphinscheduler:dolphinscheduler-alert-server \\\n-pl dolphinscheduler-tools \\\n-pl dolphinscheduler-api \\\n-pl dolphinscheduler-master \\\n-pl dolphinscheduler-worker -am\n"}, {"name": "Create k8s Kind Cluster", "run": "# install kubectl\ncurl -LO \"https://dl.k8s.io/release/v1.28.3/bin/linux/amd64/kubectl\"\nsudo chmod +x kubectl\nsudo mv kubectl /usr/local/bin/kubectl\n\n# install kind\ncurl -LO https://github.com/kubernetes-sigs/kind/releases/download/v0.20.0/kind-linux-amd64\nsudo chmod +x kind-linux-amd64\nsudo mv kind-linux-amd64 /usr/local/bin/kind\nkind version\n\n# create kind cluster\nkind_node_image=\"kindest/node:v1.23.17\"\necho \"Kubernetes version: ${kind_node_image}\"\nkind create cluster --name dolphinscheduler --image ${kind_node_image}\nkubectl version\nkubectl get all --all-namespaces\n"}, {"name": "Load images", "run": "components=(\"master\" \"worker\" \"api\" \"tools\" \"alert-server\")\nfor component in \"${components[@]}\"; do\n  kind load docker-image apache/dolphinscheduler-${component}:ci --name dolphinscheduler\ndone\n"}, {"name": "Helm install dolphinscheduler", "working-directory": "${{ github.workspace }}/deploy/kubernetes/dolphinscheduler", "run": "# install helm\ncurl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n\n# install ds chart via helm\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm dependency update .\nhelm upgrade --install --create-namespace -n dolphinscheduler dolphinscheduler . -f - <<EOF\nimage:\n  registry: apache\n  tag: ci\nmaster:\n  replicas: 1\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\nworker:\n  replicas: 1\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\nalert:\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\napi:\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds: 120\nEOF\n"}, {"name": "Wait for pods", "run": "JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; \ncomponents=(\"master\" \"worker\" \"api\" \"alert\")\nfor component in \"${components[@]}\"; do\n  until kubectl -n dolphinscheduler get pods -l app.kubernetes.io/component=${component} -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do\n    echo \"waiting for dolphinscheduler ${component} to be available\"\n    sleep 10\n    kubectl get pods --all-namespaces\n    kubectl get events --all-namespaces\n    for pod in $(kubectl get pods -n dolphinscheduler -o jsonpath='{.items[*].metadata.name}'); do\n      echo \"logs for pod $pod:\"\n      kubectl logs --tail=1000 -n dolphinscheduler $pod\n    done\n  done\ndone\n"}], "id-in-workflow": "e2e-k8s"}, "language": "java", "run_time_seconds": 652}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26304833441}, "passed_job": {"job_id": 26305288744}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v2", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "ci_pr_test", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9544986514, "travis_merge_sha": null, "base_sha": "", "head_sha": "0b6825d22303392dc9523dbbb22d7a70aadde6c4", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:03:51Z", "message": "ci_test", "jobs": [{"build_job": "11784.1", "job_id": 26304821093, "config": {"name": "API-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "11784.2", "job_id": 26304831155, "config": {"name": "API-Test-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 6}, {"build_job": "11784.3", "job_id": 26304842304, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "11784.4", "job_id": 26304842601, "config": {"name": "API-Test-Result", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["api-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9545133932, "travis_merge_sha": null, "base_sha": "", "head_sha": "a46be4983f4c4c7d2423d1f2c1247ab1be675c6c", "github_archived": true, "resettable": true, "committed_at": "2024-06-17T09:16:50Z", "message": "Merge branch 'dev' into ci_pr_test", "jobs": [{"build_job": "11790.1", "job_id": 26305277294, "config": {"name": "API-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "11790.2", "job_id": 26305286064, "config": {"name": "API-Test-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 723}, {"build_job": "11790.3", "job_id": 26305820235, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Tenant", "class": "org.apache.dolphinscheduler.api.test.cases.TenantAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 156}, {"build_job": "11790.4", "job_id": 26305820601, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "WorkerGroup", "class": "org.apache.dolphinscheduler.api.test.cases.WorkerGroupAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 147}, {"build_job": "11790.5", "job_id": 26305820799, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Project", "class": "org.apache.dolphinscheduler.api.test.cases.ProjectAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 158}, {"build_job": "11790.6", "job_id": 26305821070, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Workflow", "class": "org.apache.dolphinscheduler.api.test.cases.ProcessDefinitionAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 163}, {"build_job": "11790.7", "job_id": 26305821400, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Scheduler", "class": "org.apache.dolphinscheduler.api.test.cases.SchedulerAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 166}, {"build_job": "11790.8", "job_id": 26305821734, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Executor", "class": "org.apache.dolphinscheduler.api.test.cases.ExecutorAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 222}, {"build_job": "11790.9", "job_id": 26305821937, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "ProcessInstance", "class": "org.apache.dolphinscheduler.api.test.cases.ProcessInstanceAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 162}, {"build_job": "11790.10", "job_id": 26305988589, "config": {"name": "API-Test-Result", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["api-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26304831155}, "passed_job": {"job_id": 26305286064}, "failed_step_kind": "uses", "failed_step_command": "actions/checkout@v2", "build_system": "Maven"}, {"failed_job": {"job_id": 26304842601}, "passed_job": {"job_id": 26305988589}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9536502742, "travis_merge_sha": null, "base_sha": "", "head_sha": "6964cebefc222cca91909a5bb63e05eab1d65a9e", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:55:03Z", "message": "Fix ut", "jobs": [{"build_job": "16913.1", "job_id": 26283526635, "config": {"name": "Backend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}", "db-schema": "${{ steps.filter.outputs.db-schema }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\ndb-schema:\n  - 'dolphinscheduler-dao/src/main/resources/sql/**'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 9}, {"build_job": "16913.2", "job_id": 26283529185, "config": {"name": "Backend-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 30, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-backend", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build and Package on ${{ matrix.java }}", "run": "./mvnw -B clean install \\\n       -Prelease \\\n       -Dmaven.test.skip=true \\\n       -Dspotless.skip=true \\\n       -Dhttp.keepAlive=false \\\n       -Dmaven.wagon.http.pool=false \\\n       -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n"}, {"name": "Check dependency license", "run": "tools/dependencies/check-LICENSE.sh"}, {"uses": "actions/upload-artifact@v2", "if": "${{ matrix.java == '8' }}", "name": "Upload Binary Package", "with": {"name": "binary-package-${{ matrix.java }}", "path": "./dolphinscheduler-dist/target/apache-dolphinscheduler-*-SNAPSHOT-bin.tar.gz", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 87}, {"build_job": "16913.3", "job_id": 26283529229, "config": {"name": "Backend-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 30, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-backend", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build and Package on ${{ matrix.java }}", "run": "./mvnw -B clean install \\\n       -Prelease \\\n       -Dmaven.test.skip=true \\\n       -Dspotless.skip=true \\\n       -Dhttp.keepAlive=false \\\n       -Dmaven.wagon.http.pool=false \\\n       -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n"}, {"name": "Check dependency license", "run": "tools/dependencies/check-LICENSE.sh"}, {"uses": "actions/upload-artifact@v2", "if": "${{ matrix.java == '8' }}", "name": "Upload Binary Package", "with": {"name": "binary-package-${{ matrix.java }}", "path": "./dolphinscheduler-dist/target/apache-dolphinscheduler-*-SNAPSHOT-bin.tar.gz", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 90}, {"build_job": "16913.4", "job_id": 26283544591, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16913.5", "job_id": 26283544650, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16913.6", "job_id": 26283544713, "config": {"name": "Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter", "cluster-test", "schema-check"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ needs.paths-filter.outputs.db-schema }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' || ${{ needs.cluster-test.result }} != 'success' ]]; then\n  echo \"Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9536512440, "travis_merge_sha": null, "base_sha": "", "head_sha": "9fb32f3b0db4c2ea6f8afb7869a1333c113a42cf", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:57:50Z", "message": "Fix ut", "jobs": [{"build_job": "16914.1", "job_id": 26283552440, "config": {}, "language": "java", "run_time_seconds": 6}, {"build_job": "16914.2", "job_id": 26283554819, "config": {}, "language": "java", "run_time_seconds": 674}, {"build_job": "16914.3", "job_id": 26283554855, "config": {}, "language": "java", "run_time_seconds": 652}, {"build_job": "16914.4", "job_id": 26283719647, "config": {}, "language": "java", "run_time_seconds": 180}, {"build_job": "16914.5", "job_id": 26283719752, "config": {}, "language": "java", "run_time_seconds": 203}, {"build_job": "16914.6", "job_id": 26283719816, "config": {}, "language": "java", "run_time_seconds": 181}, {"build_job": "16914.7", "job_id": 26283719887, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "16914.8", "job_id": 26283719976, "config": {}, "language": "java", "run_time_seconds": 181}, {"build_job": "16914.9", "job_id": 26283766286, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9536502748, "travis_merge_sha": null, "base_sha": "", "head_sha": "6964cebefc222cca91909a5bb63e05eab1d65a9e", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:55:03Z", "message": "Fix ut", "jobs": [{"build_job": "19194.1", "job_id": 26283526743, "config": {"name": "E2E-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 7}, {"build_job": "19194.2", "job_id": 26283529324, "config": {"name": "E2E-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci \\\n-pl dolphinscheduler-standalone-server -am\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 84}, {"build_job": "19194.3", "job_id": 26283543801, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "19194.4", "job_id": 26283543846, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "19194.5", "job_id": 26283543906, "config": {"name": "E2E", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["e2e", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip E2E!\"\n  exit 0\nfi\nif [[ ${{ needs.e2e.result }} != 'success' ]]; then\n  echo \"E2E Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9536512446, "travis_merge_sha": null, "base_sha": "", "head_sha": "9fb32f3b0db4c2ea6f8afb7869a1333c113a42cf", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:57:50Z", "message": "Fix ut", "jobs": [{"build_job": "19195.1", "job_id": 26283552492, "config": {}, "language": "java", "run_time_seconds": 6}, {"build_job": "19195.2", "job_id": 26283554936, "config": {}, "language": "java", "run_time_seconds": 596}, {"build_job": "19195.3", "job_id": 26283702535, "config": {}, "language": "java", "run_time_seconds": 260}, {"build_job": "19195.4", "job_id": 26283702616, "config": {}, "language": "java", "run_time_seconds": 225}, {"build_job": "19195.5", "job_id": 26283702769, "config": {}, "language": "java", "run_time_seconds": 283}, {"build_job": "19195.6", "job_id": 26283702841, "config": {}, "language": "java", "run_time_seconds": 190}, {"build_job": "19195.7", "job_id": 26283702918, "config": {}, "language": "java", "run_time_seconds": 201}, {"build_job": "19195.8", "job_id": 26283702975, "config": {}, "language": "java", "run_time_seconds": 183}, {"build_job": "19195.9", "job_id": 26283703026, "config": {}, "language": "java", "run_time_seconds": 174}, {"build_job": "19195.10", "job_id": 26283703089, "config": {}, "language": "java", "run_time_seconds": 244}, {"build_job": "19195.11", "job_id": 26283703159, "config": {}, "language": "java", "run_time_seconds": 179}, {"build_job": "19195.12", "job_id": 26283703232, "config": {}, "language": "java", "run_time_seconds": 213}, {"build_job": "19195.13", "job_id": 26283703298, "config": {}, "language": "java", "run_time_seconds": 284}, {"build_job": "19195.14", "job_id": 26283703375, "config": {}, "language": "java", "run_time_seconds": 254}, {"build_job": "19195.15", "job_id": 26283703441, "config": {}, "language": "java", "run_time_seconds": 274}, {"build_job": "19195.16", "job_id": 26283703507, "config": {}, "language": "java", "run_time_seconds": 350}, {"build_job": "19195.17", "job_id": 26283703631, "config": {}, "language": "java", "run_time_seconds": 262}, {"build_job": "19195.18", "job_id": 26283703716, "config": {}, "language": "java", "run_time_seconds": 208}, {"build_job": "19195.19", "job_id": 26283703800, "config": {}, "language": "java", "run_time_seconds": 210}, {"build_job": "19195.20", "job_id": 26283703864, "config": {}, "language": "java", "run_time_seconds": 209}, {"build_job": "19195.21", "job_id": 26283703935, "config": {}, "language": "java", "run_time_seconds": 209}, {"build_job": "19195.22", "job_id": 26283782607, "config": {}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": []}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9536502734, "travis_merge_sha": null, "base_sha": "", "head_sha": "6964cebefc222cca91909a5bb63e05eab1d65a9e", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:55:03Z", "message": "Fix ut", "jobs": [{"build_job": "11751.1", "job_id": 26283526634, "config": {"name": "API-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 8}, {"build_job": "11751.2", "job_id": 26283529336, "config": {"name": "API-Test-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 90}, {"build_job": "11751.3", "job_id": 26283544740, "config": {}, "language": "java", "run_time_seconds": 0}, {"build_job": "11751.4", "job_id": 26283544787, "config": {"name": "API-Test-Result", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["api-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9536512451, "travis_merge_sha": null, "base_sha": "", "head_sha": "9fb32f3b0db4c2ea6f8afb7869a1333c113a42cf", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:57:50Z", "message": "Fix ut", "jobs": [{"build_job": "11752.1", "job_id": 26283552505, "config": {"name": "API-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "11752.2", "job_id": 26283554863, "config": {"name": "API-Test-Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "timeout-minutes": 20, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Build Image", "run": "./mvnw -B clean install \\\n-Dmaven.test.skip \\\n-Dmaven.javadoc.skip \\\n-Dspotless.skip=true \\\n-Pdocker,release -Ddocker.tag=ci\n"}, {"name": "Export Docker Images", "run": "docker save apache/dolphinscheduler-standalone-server:ci -o /tmp/standalone-image.tar \\\n&& du -sh /tmp/standalone-image.tar\n"}, {"uses": "actions/upload-artifact@v2", "name": "Upload Docker Images", "with": {"name": "standalone-image", "path": "/tmp/standalone-image.tar", "retention-days": 1}}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 617}, {"build_job": "11752.3", "job_id": 26283706963, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Tenant", "class": "org.apache.dolphinscheduler.api.test.cases.TenantAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 162}, {"build_job": "11752.4", "job_id": 26283707031, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "WorkerGroup", "class": "org.apache.dolphinscheduler.api.test.cases.WorkerGroupAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 172}, {"build_job": "11752.5", "job_id": 26283707074, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Project", "class": "org.apache.dolphinscheduler.api.test.cases.ProjectAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 156}, {"build_job": "11752.6", "job_id": 26283707128, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Workflow", "class": "org.apache.dolphinscheduler.api.test.cases.ProcessDefinitionAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 199}, {"build_job": "11752.7", "job_id": 26283707189, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Scheduler", "class": "org.apache.dolphinscheduler.api.test.cases.SchedulerAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 186}, {"build_job": "11752.8", "job_id": 26283707241, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "Executor", "class": "org.apache.dolphinscheduler.api.test.cases.ExecutorAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 193}, {"build_job": "11752.9", "job_id": 26283707290, "config": {"name": "${{ matrix.case.name }}", "needs": "build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "strategy": {"matrix": {"case": {"name": "ProcessInstance", "class": "org.apache.dolphinscheduler.api.test.cases.ProcessInstanceAPITest"}}}, "env": {"RECORDING_PATH": "/tmp/recording-${{ matrix.case.name }}"}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Cache local Maven repository", "uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-api-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"uses": "actions/download-artifact@v2", "name": "Download Docker Images", "with": {"name": "standalone-image", "path": "/tmp"}}, {"name": "Load Docker Images", "run": "docker load -i /tmp/standalone-image.tar\n"}, {"name": "Run Test", "run": "./mvnw -B -f dolphinscheduler-api-test/pom.xml -am \\\n  -DfailIfNoTests=false \\\n  -Dspotless.skip=false \\\n  -Dtest=${{ matrix.case.class }} test\n"}, {"uses": "actions/upload-artifact@v2", "if": "always()", "name": "Upload Recording", "with": {"name": "recording-${{ matrix.case.name }}", "path": "${{ env.RECORDING_PATH }}", "retention-days": 1}}], "id-in-workflow": "api-test"}, "language": "java", "run_time_seconds": 183}, {"build_job": "11752.10", "job_id": 26283753784, "config": {"name": "API-Test-Result", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["api-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26283529336}, "passed_job": {"job_id": 26283554863}, "failed_step_kind": "uses", "failed_step_command": "./.github/actions/sanity-check", "build_system": "Maven"}, {"failed_job": {"job_id": 26283544787}, "passed_job": {"job_id": 26283753784}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip API Test!\"\n  exit 0\nfi\nif [[ ${{ needs.api-test.result }} != 'success' ]]; then\n  echo \"API test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9536502736, "travis_merge_sha": null, "base_sha": "", "head_sha": "6964cebefc222cca91909a5bb63e05eab1d65a9e", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:55:03Z", "message": "Fix ut", "jobs": [{"build_job": "5710.1", "job_id": 26283526561, "config": {"name": "Frontend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "5710.2", "job_id": 26283528458, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "ubuntu-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 84}, {"build_job": "5710.3", "job_id": 26283528503, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "macos-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 103}, {"build_job": "5710.4", "job_id": 26283545809, "config": {"name": "Frontend Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter"], "if": "always()", "steps": [{"uses": "actions/checkout@v2"}, {"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 8}], "has_submodules": true}, "passed_build": {"build_id": 9536512447, "travis_merge_sha": null, "base_sha": "", "head_sha": "9fb32f3b0db4c2ea6f8afb7869a1333c113a42cf", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:57:50Z", "message": "Fix ut", "jobs": [{"build_job": "5711.1", "job_id": 26283552481, "config": {"name": "Frontend-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 7}, {"build_job": "5711.2", "job_id": 26283554932, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "ubuntu-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 204}, {"build_job": "5711.3", "job_id": 26283554981, "config": {"name": "Build", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "${{ matrix.os }}", "timeout-minutes": 30, "strategy": {"matrix": {"os": "macos-latest"}}, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"if": "matrix.os == 'ubuntu-latest'", "name": "Sanity Check", "uses": "./.github/actions/sanity-check"}, {"name": "Set up Node.js", "uses": "actions/setup-node@v2", "with": {"node-version": 16}}, {"name": "Compile and Build on ${{ matrix.os }}", "run": "set -x\nnpm install pnpm@7 -g\npnpm install\npnpm run lint\npnpm run build:prod\n"}], "id-in-workflow": "build"}, "language": "java", "run_time_seconds": 84}, {"build_job": "5711.4", "job_id": 26283601708, "config": {"name": "Frontend Build", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["build", "paths-filter"], "if": "always()", "steps": [{"uses": "actions/checkout@v2"}, {"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 6}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26283528458}, "passed_job": {"job_id": 26283554932}, "failed_step_kind": "uses", "failed_step_command": "./.github/actions/sanity-check", "build_system": "Maven"}, {"failed_job": {"job_id": 26283545809}, "passed_job": {"job_id": 26283601708}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Frontend Build!\"\n  exit 0\nfi\nif [[ ${{ needs.build.result }} != 'success' ]]; then\n  echo \"Frontend Build Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9524830685, "travis_merge_sha": null, "base_sha": "", "head_sha": "c3253e99a08b8b668d66a36f6a8aea6794fe0bda", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T02:32:27Z", "message": "Refactory Storage API", "jobs": [{"build_job": "19187.1", "job_id": 26258213207, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "19187.2", "job_id": 26258215783, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 1526}, {"build_job": "19187.3", "job_id": 26258215882, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 1542}, {"build_job": "19187.4", "job_id": 26258526605, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9525182438, "travis_merge_sha": null, "base_sha": "", "head_sha": "80d9adb38d5d9fd78fe12dbb4d130d6a7e63fbaf", "github_archived": true, "resettable": true, "committed_at": "2024-06-15T03:29:34Z", "message": "Refactory Storage API", "jobs": [{"build_job": "19189.1", "job_id": 26258978800, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "19189.2", "job_id": 26258982146, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2048}, {"build_job": "19189.3", "job_id": 26258982307, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2104}, {"build_job": "19189.4", "job_id": 26259381374, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26258215783}, "passed_job": {"job_id": 26258982146}, "failed_step_kind": "run", "failed_step_command": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false", "build_system": "Maven"}, {"failed_job": {"job_id": 26258526605}, "passed_job": {"job_id": 26259381374}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9534005993, "travis_merge_sha": null, "base_sha": "", "head_sha": "72ab21fc63b3b877aa63111f003bd82d345d7876", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T06:35:55Z", "message": "Fix ut", "jobs": [{"build_job": "19198.1", "job_id": 26277914251, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "19198.2", "job_id": 26277916787, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 1337}, {"build_job": "19198.3", "job_id": 26277916846, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 1355}, {"build_job": "19198.4", "job_id": 26278142092, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9534193308, "travis_merge_sha": null, "base_sha": "", "head_sha": "887646760c0a74533c6a011e5be4b20c524ff77c", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T07:12:28Z", "message": "Fix ut", "jobs": [{"build_job": "19199.1", "job_id": 26278338266, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 6}, {"build_job": "19199.2", "job_id": 26278340654, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2111}, {"build_job": "19199.3", "job_id": 26278340740, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2139}, {"build_job": "19199.4", "job_id": 26278752094, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26277916787}, "passed_job": {"job_id": 26278340654}, "failed_step_kind": "run", "failed_step_command": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false", "build_system": "Maven"}, {"failed_job": {"job_id": 26278142092}, "passed_job": {"job_id": 26278752094}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}, {"repo": "apache/dolphinscheduler", "ci_service": "github", "repo_mined_version": "8d1680d2f0d68fec1aa25c0ec60ddc5e45a60507", "pr_num": -1, "merged_at": null, "branch": "dev_wenjun_refactorStorageAPI", "base_branch": "", "is_error_pass": false, "failed_build": {"build_id": 9536502740, "travis_merge_sha": null, "base_sha": "", "head_sha": "6964cebefc222cca91909a5bb63e05eab1d65a9e", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:55:03Z", "message": "Fix ut", "jobs": [{"build_job": "19201.1", "job_id": 26283526644, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 7}, {"build_job": "19201.2", "job_id": 26283528952, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 87}, {"build_job": "19201.3", "job_id": 26283528998, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 83}, {"build_job": "19201.4", "job_id": 26283543674, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "passed_build": {"build_id": 9536512442, "travis_merge_sha": null, "base_sha": "", "head_sha": "9fb32f3b0db4c2ea6f8afb7869a1333c113a42cf", "github_archived": true, "resettable": true, "committed_at": "2024-06-16T13:57:50Z", "message": "Fix ut", "jobs": [{"build_job": "19202.1", "job_id": 26283552423, "config": {"name": "Unit-Test-Path-Filter", "runs-on": "ubuntu-latest", "outputs": {"not-ignore": "${{ steps.filter.outputs.not-ignore }}"}, "steps": [{"uses": "actions/checkout@v2"}, {"uses": "dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721", "id": "filter", "with": {"filters": "not-ignore:\n  - '!(docs/**)'\n"}}], "id-in-workflow": "paths-filter"}, "language": "java", "run_time_seconds": 8}, {"build_job": "19202.2", "job_id": 26283555153, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "8"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2052}, {"build_job": "19202.3", "job_id": 26283555192, "config": {"name": "Unit-Test", "needs": "paths-filter", "if": "${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name == 'push') }}", "runs-on": "ubuntu-latest", "strategy": {"matrix": {"java": "11"}}, "timeout-minutes": 45, "steps": [{"uses": "actions/checkout@v2", "with": {"submodules": true}}, {"name": "Sanity Check", "uses": "./.github/actions/sanity-check", "with": {"token": "${{ secrets.GITHUB_TOKEN }}"}}, {"name": "Set up JDK ${{ matrix.java }}", "uses": "actions/setup-java@v2", "with": {"java-version": "${{ matrix.java }}", "distribution": "adopt"}}, {"uses": "actions/cache@v3", "with": {"path": "~/.m2/repository", "key": "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-unit-test", "restore-keys": "${{ runner.os }}-maven-"}}, {"name": "Run Unit tests", "run": "./mvnw clean verify -B -Dmaven.test.skip=false -Dspotless.skip=true -DskipUT=false"}, {"name": "Upload coverage report to codecov", "run": "CODECOV_TOKEN=\"09c2663f-b091-4258-8a47-c981827eb29a\" bash <(curl -s https://codecov.io/bash)"}, {"name": "Set up JDK 17", "uses": "actions/setup-java@v2", "with": {"java-version": 17, "distribution": "adopt"}}, {"name": "Run SonarCloud Analysis", "run": "./mvnw --batch-mode verify sonar:sonar -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dspotless.skip=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.core.codeCoveragePlugin=jacoco -Dsonar.projectKey=apache-dolphinscheduler -Dsonar.login=e4058004bc6be89decf558ac819aa1ecbee57682 -Dsonar.exclusions=,dolphinscheduler-ui/src/**/i18n/locale/*.js,dolphinscheduler-microbench/src/**/* -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -DskipUT=true\n", "env": {"GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}", "SONAR_TOKEN": "${{ secrets.SONAR_TOKEN }}"}}], "id-in-workflow": "unit-test"}, "language": "java", "run_time_seconds": 2096}, {"build_job": "19202.4", "job_id": 26284032368, "config": {"name": "Unit Test", "runs-on": "ubuntu-latest", "timeout-minutes": 30, "needs": ["unit-test", "paths-filter"], "if": "always()", "steps": [{"name": "Status", "run": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n"}], "id-in-workflow": "result"}, "language": "java", "run_time_seconds": 0}], "has_submodules": true}, "jobpairs": [{"failed_job": {"job_id": 26283528952}, "passed_job": {"job_id": 26283555153}, "failed_step_kind": "uses", "failed_step_command": "./.github/actions/sanity-check", "build_system": "Maven"}, {"failed_job": {"job_id": 26283528998}, "passed_job": {"job_id": 26283555192}, "failed_step_kind": "uses", "failed_step_command": "./.github/actions/sanity-check", "build_system": "Maven"}, {"failed_job": {"job_id": 26283543674}, "passed_job": {"job_id": 26284032368}, "failed_step_kind": "run", "failed_step_command": "if [[ ${{ needs.paths-filter.outputs.not-ignore }} == 'false' && ${{ github.event_name }} == 'pull_request' ]]; then\n  echo \"Skip Unit Test!\"\n  exit 0\nfi\nif [[ ${{ needs.unit-test.result }} != 'success' ]]; then\n  echo \"Unit Test Failed!\"\n  exit -1\nfi\n", "build_system": "Maven"}]}]