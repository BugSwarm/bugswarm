travis_fold:start:system_info[0K[33;1mBuild system information[0mBuild language: pythonBuild group: stableBuild dist: trustyBuild id: ''Job id: ''[34m[1mBuild image provisioning date and time[0mTue Dec  5 20:11:19 UTC 2017[34m[1mOperating System Details[0mDistributor ID:	UbuntuDescription:	Ubuntu 14.04.5 LTSRelease:	14.04Codename:	trusty[34m[1mCookbooks Version[0m7c2c6a6 https://github.com/travis-ci/travis-cookbooks/tree/7c2c6a6[34m[1mgit version[0mgit version 2.15.1[34m[1mbash version[0mGNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)[34m[1mgcc version[0mgcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4Copyright (C) 2013 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.[34m[1mdocker version[0mClient: Version:      17.09.0-ce API version:  1.32 Go version:   go1.8.3 Git commit:   afdb6d4 Built:        Tue Sep 26 22:39:28 2017 OS/Arch:      linux/amd64[34m[1mclang version[0mclang version 5.0.0 (tags/RELEASE_500/final)Target: x86_64-unknown-linux-gnuThread model: posixInstalledDir: /usr/local/clang-5.0.0/bin[34m[1mjq version[0mjq-1.5[34m[1mbats version[0mBats 0.4.0[34m[1mshellcheck version[0m0.4.6[34m[1mshfmt version[0mv2.0.0[34m[1mccache version[0mccache version 3.1.9Copyright (C) 2002-2007 Andrew TridgellCopyright (C) 2009-2011 Joel RosdahlThis program is free software; you can redistribute it and/or modify it underthe terms of the GNU General Public License as published by the Free SoftwareFoundation; either version 3 of the License, or (at your option) any laterversion.[34m[1mcmake version[0mcmake version 3.9.2CMake suite maintained and supported by Kitware (kitware.com/cmake).[34m[1mheroku version[0mheroku-cli/6.14.39-addc925 (linux-x64) node-v9.2.0[34m[1mimagemagick version[0mVersion: ImageMagick 6.7.7-10 2017-07-31 Q16 http://www.imagemagick.org[34m[1mmd5deep version[0m4.2[34m[1mmercurial version[0mMercurial Distributed SCM (version 4.2.2)(see https://mercurial-scm.org for more information)Copyright (C) 2005-2017 Matt Mackall and othersThis is free software; see the source for copying conditions. There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.[34m[1mmysql version[0mmysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapper[34m[1mopenssl version[0mOpenSSL 1.0.1f 6 Jan 2014[34m[1mpacker version[0mPacker v1.0.2Your version of Packer is out of date! The latest versionis 1.1.2. You can update by downloading from www.packer.io[34m[1mpostgresql client version[0mpsql (PostgreSQL) 9.6.6[34m[1mragel version[0mRagel State Machine Compiler version 6.8 Feb 2013Copyright (c) 2001-2009 by Adrian Thurston[34m[1msubversion version[0msvn, version 1.8.8 (r1568071)   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnuCopyright (C) 2013 The Apache Software Foundation.This software consists of contributions made by many people;see the NOTICE file for more information.Subversion is open source software, see http://subversion.apache.org/The following repository access (RA) modules are available:* ra_svn : Module for accessing a repository using the svn network protocol.  - with Cyrus SASL authentication  - handles 'svn' scheme* ra_local : Module for accessing a repository on local disk.  - handles 'file' scheme* ra_serf : Module for accessing a repository via WebDAV protocol using serf.  - using serf 1.3.3  - handles 'http' scheme  - handles 'https' scheme[34m[1msudo version[0mSudo version 1.8.9p5Configure options: --prefix=/usr -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-timedir=/var/lib/sudo --mandir=/usr/share/man --libexecdir=/usr/lib/sudo --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinuxSudoers policy plugin version 1.8.9p5Sudoers file grammar version 43Sudoers path: /etc/sudoersAuthentication methods: 'pam'Syslog facility if syslog is being used for logging: authprivSyslog priority to use when user authenticates successfully: noticeSyslog priority to use when user authenticates unsuccessfully: alertSend mail if the user is not in sudoersUse a separate timestamp for each user/tty comboLecture user the first time they run sudoRoot may run sudoAllow some information gathering to give useful error messagesRequire fully-qualified hostnames in the sudoers fileVisudo will honor the EDITOR environment variableSet the LOGNAME and USER environment variablesLength at which to wrap log file lines (0 for no wrap): 80Authentication timestamp timeout: 15.0 minutesPassword prompt timeout: 0.0 minutesNumber of tries to enter a password: 3Umask to use or 0777 to use user's: 022Path to mail program: /usr/sbin/sendmailFlags for mail program: -tAddress to send mail to: rootSubject line for mail messages: *** SECURITY information for %h ***Incorrect password message: Sorry, try again.Path to authentication timestamp dir: /var/lib/sudoDefault password prompt: [sudo] password for %p: Default user to run commands as: rootValue to override user's $PATH with: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/binPath to the editor for use by visudo: /usr/bin/editorWhen to require a password for 'list' pseudocommand: anyWhen to require a password for 'verify' pseudocommand: allFile descriptors >= 3 will be closed before executing a commandEnvironment variables to check for sanity:	TZ	TERM	LINGUAS	LC_*	LANGUAGE	LANG	COLORTERMEnvironment variables to remove:	RUBYOPT	RUBYLIB	PYTHONUSERBASE	PYTHONINSPECT	PYTHONPATH	PYTHONHOME	TMPPREFIX	ZDOTDIR	READNULLCMD	NULLCMD	FPATH	PERL5DB	PERL5OPT	PERL5LIB	PERLLIB	PERLIO_DEBUG 	JAVA_TOOL_OPTIONS	SHELLOPTS	GLOBIGNORE	PS4	BASH_ENV	ENV	TERMCAP	TERMPATH	TERMINFO_DIRS	TERMINFO	_RLD*	LD_*	PATH_LOCALE	NLSPATH	HOSTALIASES	RES_OPTIONS	LOCALDOMAIN	CDPATH	IFSEnvironment variables to preserve:	JAVA_HOME	TRAVIS	CI	DEBIAN_FRONTEND	XAUTHORIZATION	XAUTHORITY	PS2	PS1	PATH	LS_COLORS	KRB5CCNAME	HOSTNAME	HOME	DISPLAY	COLORSLocale to use while parsing sudoers: CDirectory in which to store input/output logs: /var/log/sudo-ioFile in which to store the input/output log: %{seq}Add an entry to the utmp/utmpx file when allocating a ptyPAM service name to usePAM service name to use for login shellsCreate a new PAM session for the command to run inMaximum I/O log sequence number: 0Local IP address and netmask pairs:	172.17.0.2/255.255.0.0Sudoers I/O plugin version 1.8.9p5[34m[1mgzip version[0mgzip 1.6Copyright (C) 2007, 2010, 2011 Free Software Foundation, Inc.Copyright (C) 1993 Jean-loup Gailly.This is free software.  You may redistribute copies of it under the terms ofthe GNU General Public License <http://www.gnu.org/licenses/gpl.html>.There is NO WARRANTY, to the extent permitted by law.Written by Jean-loup Gailly.[34m[1mzip version[0mCopyright (c) 1990-2008 Info-ZIP - Type 'zip "-L"' for software license.This is Zip 3.0 (July 5th 2008), by Info-ZIP.Currently maintained by E. Gordon.  Please send bug reports tothe authors using the web page at www.info-zip.org; see README for details.Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,as of above date; see http://www.info-zip.org/ for other sites.Compiled with gcc 4.8.2 for Unix (Linux ELF) on Oct 21 2013.Zip special compilation options:	USE_EF_UT_TIME       (store Universal Time)	BZIP2_SUPPORT        (bzip2 library version 1.0.6, 6-Sept-2010)	    bzip2 code and library copyright (c) Julian R Seward	    (See the bzip2 license for terms of use)	SYMLINK_SUPPORT      (symbolic links supported)	LARGE_FILE_SUPPORT   (can read and write large files on file system)	ZIP64_SUPPORT        (use Zip64 to store large files in archives)	UNICODE_SUPPORT      (store and read UTF-8 Unicode paths)	STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)	UIDGID_NOT_16BIT     (old Unix 16-bit UID/GID extra field not used)	[encryption, version 2.91 of 05 Jan 2007] (modified for Zip 3)Encryption notice:	The encryption code of this program is not copyrighted and is	put in the public domain.  It was originally written in Europe	and, to the best of our knowledge, can be freely distributed	in both source and object forms from any country, including	the USA under License Exception TSU of the U.S. Export	Administration Regulations (section 740.13(e)) of 6 June 2002.Zip environment options:             ZIP:  [none]          ZIPOPT:  [none][34m[1mvim version[0mVIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:43:18)Included patches: 1-52Extra patches: 8.0.0056Modified by pkg-vim-maintainers@lists.alioth.debian.orgCompiled by buildd@Huge version without GUI.  Features included (+) or not (-):+acl             +farsi           +mouse_netterm   +syntax+arabic          +file_in_path    +mouse_sgr       +tag_binary+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static-balloon_eval    +float           +mouse_urxvt     -tag_any_white-browse          +folding         +mouse_xterm     -tcl++builtin_terms  -footer          +multi_byte      +terminfo+byte_offset     +fork()          +multi_lang      +termresponse+cindent         +gettext         -mzscheme        +textobjects-clientserver    -hangul_input    +netbeans_intg   +title-clipboard       +iconv           +path_extra      -toolbar+cmdline_compl   +insert_expand   -perl            +user_commands+cmdline_hist    +jumplist        +persistent_undo +vertsplit+cmdline_info    +keymap          +postscript      +virtualedit+comments        +langmap         +printer         +visual+conceal         +libcall         +profile         +visualextra+cryptv          +linebreak       +python          +viminfo+cscope          +lispindent      -python3         +vreplace+cursorbind      +listcmds        +quickfix        +wildignore+cursorshape     +localmap        +reltime         +wildmenu+dialog_con      -lua             +rightleft       +windows+diff            +menu            -ruby            +writebackup+digraphs        +mksession       +scrollbind      -X11-dnd             +modify_fname    +signs           -xfontset-ebcdic          +mouse           +smartindent     -xim+emacs_tags      -mouseshape      -sniff           -xsmp+eval            +mouse_dec       +startuptime     -xterm_clipboard+ex_extra        +mouse_gpm       +statusline      -xterm_save+extra_search    -mouse_jsbterm   -sun_workshop    -xpm   system vimrc file: "$VIM/vimrc"     user vimrc file: "$HOME/.vimrc" 2nd user vimrc file: "~/.vim/vimrc"      user exrc file: "$HOME/.exrc"  fall-back for $VIM: "/usr/share/vim"Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      Linking: gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      [34m[1miptables version[0miptables v1.4.21[34m[1mcurl version[0mcurl 7.35.0 (x86_64-pc-linux-gnu) libcurl/7.35.0 OpenSSL/1.0.1f zlib/1.2.8 libidn/1.28 librtmp/2.3[34m[1mwget version[0mGNU Wget 1.15 built on linux-gnu.[34m[1mrsync version[0mrsync  version 3.1.0  protocol version 31[34m[1mgimme version[0mv1.2.0[34m[1mnvm version[0m0.33.6[34m[1mperlbrew version[0m/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.80[34m[1mphpenv version[0mrbenv 1.1.1-25-g6aa70b6[34m[1mrvm version[0mrvm 1.29.3 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io][34m[1mdefault ruby version[0mruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux][34m[1mCouchDB version[0mcouchdb 1.6.1[34m[1mElasticSearch version[0m5.5.0[34m[1mInstalled Firefox version[0mfirefox 56.0.2[34m[1mMongoDB version[0mMongoDB 3.4.10[34m[1mPhantomJS version[0m2.1.1[34m[1mPre-installed PostgreSQL versions[0m9.2.249.3.209.4.159.5.109.6.6[34m[1mRabbitMQ Version[0m3.6.14[34m[1mRedis version[0mredis-server 4.0.6[34m[1mriak version[0m2.2.3[34m[1mPre-installed Go versions[0m1.7.4[34m[1mant version[0mApache Ant(TM) version 1.9.3 compiled on April 8 2014[34m[1mmvn version[0mApache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z)Maven home: /usr/local/maven-3.5.2Java version: 1.8.0_151, vendor: Oracle CorporationJava home: /usr/lib/jvm/java-8-oracle/jreDefault locale: en_US, platform encoding: UTF-8OS name: "linux", version: "4.4.0-101-generic", arch: "amd64", family: "unix"[34m[1mgradle version[0m------------------------------------------------------------Gradle 4.0.1------------------------------------------------------------Build time:   2017-07-07 14:02:41 UTCRevision:     38e5dc0f772daecca1d2681885d3d85414eb6826Groovy:       2.4.11Ant:          Apache Ant(TM) version 1.9.6 compiled on June 29 2015JVM:          1.8.0_151 (Oracle Corporation 25.151-b12)OS:           Linux 4.4.0-101-generic amd64[34m[1mlein version[0mLeiningen 2.8.1 on Java 1.8.0_151 Java HotSpot(TM) 64-Bit Server VM[34m[1mPre-installed Node.js versions[0mv4.8.6v6.12.0v6.12.1v8.9v8.9.1[34m[1mphpenv versions[0m  system  5.6* 5.6.32 (set by /home/travis/.phpenv/version)  7.0  7.0.25  7.1  7.1.11  hhvm  hhvm-stable[34m[1mcomposer --version[0mComposer version 1.5.2 2017-09-11 16:59:25[34m[1mPre-installed Ruby versions[0mruby-2.2.7ruby-2.3.4ruby-2.4.1travis_fold:end:system_info[0Kgrep: /etc/apt/sources.list.d/*: No such file or directorysed: cannot rename /etc/hosts: Device or resource busysed: cannot rename /etc/hosts: Device or resource busy[33;1m3.5 is not installed; attempting download[0m[33;1mDownloading archive: https://s3.amazonaws.com/travis-python-archives/binaries/ubuntu/14.04/x86_64/python-3.5.tar.bz2[0m$ sudo tar xjf python-3.5.tar.bz2 --directory /sed: can't read /etc/profile.d/pyenv.sh: No such file or directory$ cd passed/paramiko/paramikotravis_time:start:04d7e788[0K$ source ~/virtualenv/python3.5/bin/activatetravis_time:end:04d7e788:start=1604846018346094896,finish=1604846018364268467,duration=18173571[0Ktravis_fold:start:cache.1[0KSetting up build cache$ export CASHER_DIR=$HOME/.cashertravis_time:start:13d19fd0[0K$ Installing caching utilitiestravis_time:end:13d19fd0:start=1604846019048124275,finish=1604846019121346149,duration=73221874[0Ktravis_time:start:003d3fe6[0Ktravis_time:end:003d3fe6:start=1604846019138017763,finish=1604846019149287256,duration=11269493[0Ktravis_time:start:0d351350[0K/home/travis/.casher/bin/casher:213:in `cache_archive_name': undefined method `[]' for nil:NilClass (NoMethodError)	from /home/travis/.casher/bin/casher:65:in `block in fetch'	from /home/travis/.casher/bin/casher:64:in `each'	from /home/travis/.casher/bin/casher:64:in `fetch'	from /home/travis/.casher/bin/casher:53:in `block in run'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:88:in `block in timeout'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:32:in `block in catch'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:32:in `catch'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:32:in `catch'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:103:in `timeout'	from /home/travis/.casher/bin/casher:53:in `run'	from /home/travis/.casher/bin/casher:263:in `<main>'[32;1mattempting to download cache archive[0mtravis_time:end:0d351350:start=1604846019162597331,finish=1604846020112282547,duration=949685216[0Ktravis_time:start:22ee797c[0Ktravis_time:end:22ee797c:start=1604846020124704291,finish=1604846020134898365,duration=10194074[0Ktravis_time:start:08e23d00[0K[32;1madding /home/travis/.cache/pip to cache[0mtravis_time:end:08e23d00:start=1604846020147338442,finish=1604846021033198168,duration=885859726[0Ktravis_fold:end:cache.1[0K$ python --versionPython 3.5.6$ pip --versionpip 18.0 from /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/pip (python 3.5)travis_fold:start:install.1[0Ktravis_time:start:11d74568[0K$ pip install pip==9.0.1 setuptools==36.6.0Collecting pip==9.0.1  Downloading https://files.pythonhosted.org/packages/b6/ac/7015eb97dc749283ffdec1c3a88ddb8ae03b8fad0f0e611408f196358da3/pip-9.0.1-py2.py3-none-any.whl (1.3MB)Collecting setuptools==36.6.0  Downloading https://files.pythonhosted.org/packages/bd/4c/b06ab3abfc8bc93b87b70f4cab22352c3c72deba7b71390d14bfffa97c85/setuptools-36.6.0-py2.py3-none-any.whl (481kB)Installing collected packages: pip, setuptools  Found existing installation: pip 18.0    Uninstalling pip-18.0:      Successfully uninstalled pip-18.0  Found existing installation: setuptools 40.0.0    Uninstalling setuptools-40.0.0:      Successfully uninstalled setuptools-40.0.0Successfully installed pip-9.0.1 setuptools-36.6.0travis_time:end:11d74568:start=1604846021480047385,finish=1604846024869604778,duration=3389557393[0Ktravis_fold:end:install.1[0Ktravis_fold:start:install.2[0Ktravis_time:start:24a28a8a[0K$ pip install -e .Obtaining file:///home/travis/build/passed/paramiko/paramikoCollecting bcrypt>=3.1.3 (from paramiko==2.4.0)  Downloading https://files.pythonhosted.org/packages/8b/1d/82826443777dd4a624e38a08957b975e75df859b381ae302cfd7a30783ed/bcrypt-3.1.7-cp34-abi3-manylinux1_x86_64.whl (56kB)Collecting cryptography>=1.5 (from paramiko==2.4.0)  Downloading https://files.pythonhosted.org/packages/08/31/c43f1e45b4a5ebac13ff038a3f167ba3c7432f6dc8683ea504f5af9265eb/cryptography-3.2.1-cp35-abi3-manylinux1_x86_64.whl (2.6MB)Collecting pynacl>=1.0.1 (from paramiko==2.4.0)  Downloading https://files.pythonhosted.org/packages/9d/57/2f5e6226a674b2bcb6db531e8b383079b678df5b10cdaa610d6cf20d77ba/PyNaCl-1.4.0-cp35-abi3-manylinux1_x86_64.whl (961kB)Collecting pyasn1>=0.1.7 (from paramiko==2.4.0)  Downloading https://files.pythonhosted.org/packages/62/1e/a94a8d635fa3ce4cfc7f506003548d0a2447ae76fd5ca53932970fe3053f/pyasn1-0.4.8-py2.py3-none-any.whl (77kB)Collecting cffi>=1.1 (from bcrypt>=3.1.3->paramiko==2.4.0)  Downloading https://files.pythonhosted.org/packages/92/4e/81944b0b3fbdc6ffb6eb550d6ec9840c6bb40d3b2c0b370bed87118f443c/cffi-1.14.3-cp35-cp35m-manylinux1_x86_64.whl (400kB)Requirement already satisfied: six>=1.4.1 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from bcrypt>=3.1.3->paramiko==2.4.0)Collecting pycparser (from cffi>=1.1->bcrypt>=3.1.3->paramiko==2.4.0)  Downloading https://files.pythonhosted.org/packages/ae/e7/d9c3a176ca4b02024debf82342dab36efadfc5776f9c8db077e8f6e71821/pycparser-2.20-py2.py3-none-any.whl (112kB)Installing collected packages: pycparser, cffi, bcrypt, cryptography, pynacl, pyasn1, paramiko  Running setup.py develop for paramikoSuccessfully installed bcrypt-3.1.7 cffi-1.14.3 cryptography-3.2.1 paramiko pyasn1-0.4.8 pycparser-2.20 pynacl-1.4.0travis_time:end:24a28a8a:start=1604846024882873108,finish=1604846030076015411,duration=5193142303[0Ktravis_fold:end:install.2[0Ktravis_fold:start:install.3[0Ktravis_time:start:00c0fe3c[0K$ pip install codecov==2.0.13Collecting codecov==2.0.13  Downloading https://files.pythonhosted.org/packages/4c/99/6f19344e976556a724041f3705d8311f9ff7c175cc27d00381823be5b572/codecov-2.0.13-py2.py3-none-any.whlCollecting requests>=2.7.9 (from codecov==2.0.13)  Downloading https://files.pythonhosted.org/packages/45/1e/0c169c6a5381e241ba7404532c16a21d86ab872c9bed8bdcd4c423954103/requests-2.24.0-py2.py3-none-any.whl (61kB)Collecting coverage (from codecov==2.0.13)  Downloading https://files.pythonhosted.org/packages/35/58/e38636e8233b49982efca6a69c9974f2575439f637dc3b0e8ac0e77c550c/coverage-5.3-cp35-cp35m-manylinux1_x86_64.whl (229kB)Collecting idna<3,>=2.5 (from requests>=2.7.9->codecov==2.0.13)  Downloading https://files.pythonhosted.org/packages/a2/38/928ddce2273eaa564f6f50de919327bf3a00f091b5baba8dfa9460f3a8a8/idna-2.10-py2.py3-none-any.whl (58kB)Collecting chardet<4,>=3.0.2 (from requests>=2.7.9->codecov==2.0.13)  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests>=2.7.9->codecov==2.0.13)  Downloading https://files.pythonhosted.org/packages/56/aa/4ef5aa67a9a62505db124a5cb5262332d1d4153462eb8fd89c9fa41e5d92/urllib3-1.25.11-py2.py3-none-any.whl (127kB)Requirement already satisfied: certifi>=2017.4.17 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from requests>=2.7.9->codecov==2.0.13)Installing collected packages: idna, chardet, urllib3, requests, coverage, codecovSuccessfully installed chardet-3.0.4 codecov-2.0.13 coverage-5.3 idna-2.10 requests-2.24.0 urllib3-1.25.11travis_time:end:00c0fe3c:start=1604846030090283662,finish=1604846033261001446,duration=3170717784[0Ktravis_fold:end:install.3[0Ktravis_fold:start:install.4[0Ktravis_time:start:197dbfcd[0K$ pip install -r dev-requirements.txtCollecting invoke==0.22.0 (from -r dev-requirements.txt (line 1))  Downloading https://files.pythonhosted.org/packages/2f/aa/704d05da1d71c0653f2d841429fdecca366994f78cb18b574dc3388612b6/invoke-0.22.0-py3-none-any.whl (154kB)Collecting invocations==0.20.0 (from -r dev-requirements.txt (line 2))  Downloading https://files.pythonhosted.org/packages/aa/83/f188eb99c5d3c299d65ae4e78e95380558d9362e4c4fde6b962a0312d9da/invocations-0.20.0-py2.py3-none-any.whlCollecting sphinx==1.6.6 (from -r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/d8/34/42232f561662c6b0dcb5c7c4571443cd4f23a2770833cd458486d6b6182c/Sphinx-1.6.6-py2.py3-none-any.whl (1.9MB)Collecting alabaster==0.7.10 (from -r dev-requirements.txt (line 4))  Downloading https://files.pythonhosted.org/packages/2e/c3/9b7dcd8548cf2c00531763ba154e524af575e8f36701bacfe5bcadc67440/alabaster-0.7.10-py2.py3-none-any.whlCollecting releases==1.4.0 (from -r dev-requirements.txt (line 5))  Downloading https://files.pythonhosted.org/packages/61/08/a20b8bda9c82fdb1eb25098f4f167b71434f36e842e1ef8e8ca08fbf7e7b/releases-1.4.0-py2.py3-none-any.whlCollecting semantic_version==2.6.0 (from -r dev-requirements.txt (line 6))  Downloading https://files.pythonhosted.org/packages/28/be/3a7241d731ba89063780279a5433f5971c1cf41735b64a9f874b7c3ff995/semantic_version-2.6.0-py3-none-any.whlCollecting wheel==0.24 (from -r dev-requirements.txt (line 7))  Downloading https://files.pythonhosted.org/packages/e8/14/eaaac12b0432c984a27ad0050a5a0bedc6135df35a0f5f1f35228faf12d4/wheel-0.24.0-py2.py3-none-any.whl (63kB)Collecting twine==1.9.1 (from -r dev-requirements.txt (line 8))  Downloading https://files.pythonhosted.org/packages/f8/11/4fb94a084b49cd68eb831f97f3744a89d8bac505755bdcec84372cf21a68/twine-1.9.1-py2.py3-none-any.whlCollecting flake8==2.6.2 (from -r dev-requirements.txt (line 9))  Downloading https://files.pythonhosted.org/packages/70/a9/9b66f22d038de51e05f92d5e677fd89d8f9c980db0b8a130621baad052f5/flake8-2.6.2-py2.py3-none-any.whlCollecting pytest==3.2.1 (from -r dev-requirements.txt (line 10))  Downloading https://files.pythonhosted.org/packages/e0/1e/d52c6a3a143935410ee33320341ea7bbb770ca8fe89c3d51e18254e0a2ba/pytest-3.2.1-py2.py3-none-any.whl (186kB)Collecting pytest_relaxed==1.0.0 (from -r dev-requirements.txt (line 11))  Downloading https://files.pythonhosted.org/packages/b8/c3/aa956d3626a4c07e002d317125af3d088a01010cf2a2303fcb914bea817e/pytest-relaxed-1.0.0.tar.gzCollecting blessings<2,>=1.6 (from invocations==0.20.0->-r dev-requirements.txt (line 2))  Downloading https://files.pythonhosted.org/packages/03/74/489f85a78247609c6b4f13733cbf3ba0d864b11aa565617b645d6fdf2a4a/blessings-1.7-py3-none-any.whlCollecting tabulate==0.7.5 (from invocations==0.20.0->-r dev-requirements.txt (line 2))  Downloading https://files.pythonhosted.org/packages/db/40/6ffc855c365769c454591ac30a25e9ea0b3e8c952a1259141f5b9878bd3d/tabulate-0.7.5.tar.gzCollecting enum34<2,>=1.1 (from invocations==0.20.0->-r dev-requirements.txt (line 2))  Downloading https://files.pythonhosted.org/packages/63/f6/ccb1c83687756aeabbf3ca0f213508fcfb03883ff200d201b3a4c60cedcc/enum34-1.1.10-py3-none-any.whlCollecting tqdm>=4.8.1 (from invocations==0.20.0->-r dev-requirements.txt (line 2))  Downloading https://files.pythonhosted.org/packages/93/3a/96b3dc293aa72443cf9627444c3c221a7ba34bb622e4d8bf1b5d4f2d9d08/tqdm-4.51.0-py2.py3-none-any.whl (70kB)Collecting snowballstemmer>=1.1 (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/7d/4b/cdf1113a0e88b641893b814e9c36f69a6fda28cd88b62c7f0d858cde3166/snowballstemmer-2.0.0-py2.py3-none-any.whl (97kB)Requirement already satisfied: six>=1.5 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from sphinx==1.6.6->-r dev-requirements.txt (line 3))Collecting babel!=2.0,>=1.3 (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/15/a1/522dccd23e5d2e47aed4b6a16795b8213e3272c7506e625f2425ad025a19/Babel-2.8.0-py2.py3-none-any.whl (8.6MB)Requirement already satisfied: setuptools in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from sphinx==1.6.6->-r dev-requirements.txt (line 3))Collecting Jinja2>=2.3 (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/30/9e/f663a2aa66a09d838042ae1a2c5659828bb9b41ea3a6efa20a20fd92b121/Jinja2-2.11.2-py2.py3-none-any.whl (125kB)Collecting docutils>=0.11 (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/81/44/8a15e45ffa96e6cf82956dd8d7af9e666357e16b0d93b253903475ee947f/docutils-0.16-py2.py3-none-any.whl (548kB)Collecting imagesize (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/31/b2/b5522a0c8d11e4aff83f8342f3f0dea68c2fb25aa44403e420587f0ce204/imagesize-1.2.0-py2.py3-none-any.whlCollecting Pygments>=2.0 (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/d8/cf/d7e48846e10ac4f8b89d489cec3dc9c2804a825f812c851559cfbcc251cc/Pygments-2.7.2-py3-none-any.whl (948kB)Requirement already satisfied: requests>=2.0.0 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from sphinx==1.6.6->-r dev-requirements.txt (line 3))Collecting sphinxcontrib-websupport (from sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/e9/e5/2a547830845e6e6e5d97b3246fc1e3ec74cba879c9adc5a8e27f1291bca3/sphinxcontrib_websupport-1.2.4-py2.py3-none-any.whlCollecting pkginfo>=1.0 (from twine==1.9.1->-r dev-requirements.txt (line 8))  Downloading https://files.pythonhosted.org/packages/4f/3c/535287349af1b117e082f8e77feca52fbe2fdf61ef1e6da6bcc2a72a3a79/pkginfo-1.6.1-py2.py3-none-any.whlCollecting requests-toolbelt>=0.8.0 (from twine==1.9.1->-r dev-requirements.txt (line 8))  Downloading https://files.pythonhosted.org/packages/60/ef/7681134338fc097acef8d9b2f8abe0458e4d87559c689a8c306d0957ece5/requests_toolbelt-0.9.1-py2.py3-none-any.whl (54kB)Collecting pyflakes!=1.2.0,!=1.2.1,!=1.2.2,<1.3,>=0.8.1 (from flake8==2.6.2->-r dev-requirements.txt (line 9))  Downloading https://files.pythonhosted.org/packages/74/55/98f59358be6d7240ba546b8a74813cc21841a9145a0c1a3a7998f50acbe7/pyflakes-1.2.3-py2.py3-none-any.whl (209kB)Collecting mccabe<0.6,>=0.2.1 (from flake8==2.6.2->-r dev-requirements.txt (line 9))  Downloading https://files.pythonhosted.org/packages/69/be/9c322ed286263a93e5ee0ff575662d0709fc73ee906522e7cfa72b08b946/mccabe-0.5.3-py2.py3-none-any.whlCollecting pycodestyle<2.1,>=2.0 (from flake8==2.6.2->-r dev-requirements.txt (line 9))  Downloading https://files.pythonhosted.org/packages/73/31/136a79364c1681a3c276796d1f5090833bd03461b78a1b037638d1a2c484/pycodestyle-2.0.0-py2.py3-none-any.whl (42kB)Requirement already satisfied: py>=1.4.33 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from pytest==3.2.1->-r dev-requirements.txt (line 10))Collecting decorator<5,>=4 (from pytest_relaxed==1.0.0->-r dev-requirements.txt (line 11))  Downloading https://files.pythonhosted.org/packages/ed/1b/72a1821152d07cf1d8b6fce298aeb06a7eb90f4d6d41acec9861e7cc6df0/decorator-4.4.2-py2.py3-none-any.whlCollecting pytz>=2015.7 (from babel!=2.0,>=1.3->sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/12/f8/ff09af6ff61a3efaad5f61ba5facdf17e7722c4393f7d8a66674d2dbd29f/pytz-2020.4-py2.py3-none-any.whl (509kB)Collecting MarkupSafe>=0.23 (from Jinja2>=2.3->sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/6e/57/d40124076756c19ff2269678de7ae25a14ebbb3f6314eb5ce9477f191350/MarkupSafe-1.1.1-cp35-cp35m-manylinux1_x86_64.whlRequirement already satisfied: certifi>=2017.4.17 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from requests>=2.0.0->sphinx==1.6.6->-r dev-requirements.txt (line 3))Requirement already satisfied: idna<3,>=2.5 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from requests>=2.0.0->sphinx==1.6.6->-r dev-requirements.txt (line 3))Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from requests>=2.0.0->sphinx==1.6.6->-r dev-requirements.txt (line 3))Requirement already satisfied: chardet<4,>=3.0.2 in /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages (from requests>=2.0.0->sphinx==1.6.6->-r dev-requirements.txt (line 3))Collecting sphinxcontrib-serializinghtml (from sphinxcontrib-websupport->sphinx==1.6.6->-r dev-requirements.txt (line 3))  Downloading https://files.pythonhosted.org/packages/9a/ca/bfad79b79b3821d0c6361c431f0ef4aec16ee248338b2c2013008b34d345/sphinxcontrib_serializinghtml-1.1.4-py2.py3-none-any.whl (89kB)Building wheels for collected packages: pytest-relaxed, tabulate  Running setup.py bdist_wheel for pytest-relaxed: started  Running setup.py bdist_wheel for pytest-relaxed: finished with status 'done'  Stored in directory: /home/travis/.cache/pip/wheels/ee/4f/83/b7c90eb89deaa73345c9bac7797abb030b311b5a872538b0f7  Running setup.py bdist_wheel for tabulate: started  Running setup.py bdist_wheel for tabulate: finished with status 'done'  Stored in directory: /home/travis/.cache/pip/wheels/96/9c/9a/369b6376b11523584a6040a89488c28f0f88cb52167dceb648Successfully built pytest-relaxed tabulateInstalling collected packages: invoke, blessings, semantic-version, snowballstemmer, pytz, babel, MarkupSafe, Jinja2, docutils, imagesize, Pygments, sphinxcontrib-serializinghtml, sphinxcontrib-websupport, alabaster, sphinx, releases, tabulate, enum34, tqdm, invocations, wheel, pkginfo, requests-toolbelt, twine, pyflakes, mccabe, pycodestyle, flake8, pytest, decorator, pytest-relaxed  Found existing installation: wheel 0.31.1    Uninstalling wheel-0.31.1:      Successfully uninstalled wheel-0.31.1  Found existing installation: pytest 3.7.1    Uninstalling pytest-3.7.1:      Successfully uninstalled pytest-3.7.1Successfully installed Jinja2-2.11.2 MarkupSafe-1.1.1 Pygments-2.7.2 alabaster-0.7.10 babel-2.8.0 blessings-1.7 decorator-4.4.2 docutils-0.16 enum34-1.1.10 flake8-2.6.2 imagesize-1.2.0 invocations-0.20.0 invoke-0.22.0 mccabe-0.5.3 pkginfo-1.6.1 pycodestyle-2.0.0 pyflakes-1.2.3 pytest-3.2.1 pytest-relaxed-1.0.0 pytz-2020.4 releases-1.4.0 requests-toolbelt-0.9.1 semantic-version-2.6.0 snowballstemmer-2.0.0 sphinx-1.6.6 sphinxcontrib-serializinghtml-1.1.4 sphinxcontrib-websupport-1.2.4 tabulate-0.7.5 tqdm-4.51.0 twine-1.9.1 wheel-0.24.0travis_time:end:197dbfcd:start=1604846033274605547,finish=1604846053098474010,duration=19823868463[0Ktravis_fold:end:install.4[0Ktravis_time:start:11a66970[0K$ inv coverage[1m============================= test session starts ==============================[0mplatform linux -- Python 3.5.6, pytest-3.2.1, py-1.5.4, pluggy-0.4.0 -- /home/travis/virtualenv/python3.5.6/bin/pythoncachedir: .cacherootdir: /home/travis/build/passed/paramiko/paramiko, inifile: setup.cfg[1mcollecting 0 items                                                              [0m[1mcollecting 9 items                                                              [0m[1mcollecting 9 items                                                              [0m[1mcollecting 13 items                                                             [0m[1mcollecting 13 items                                                             [0m[1mcollecting 13 items                                                             [0m[1mcollecting 41 items                                                             [0m[1mcollecting 46 items                                                             [0m[1mcollecting 49 items                                                             [0m[1mcollecting 49 items                                                             [0m[1mcollecting 65 items                                                             [0m[1mcollecting 65 items                                                             [0m[1mcollecting 67 items                                                             [0m[1mcollecting 67 items                                                             [0m[1mcollecting 72 items                                                             [0m[1mcollecting 72 items                                                             [0m[1mcollecting 84 items                                                             [0m[1mcollecting 84 items                                                             [0m[1mcollecting 86 items                                                             [0m[1mcollecting 86 items                                                             [0m[1mcollecting 90 items                                                             [0m[1mcollecting 90 items                                                             [0m[1mcollecting 93 items                                                             [0m[1mcollecting 93 items                                                             [0m[1mcollecting 125 items                                                            [0m[1mcollecting 125 items                                                            [0m[1mcollecting 159 items                                                            [0m[1mcollecting 159 items                                                            [0m[1mcollecting 159 items                                                            [0m[1mcollecting 169 items                                                            [0m[1mcollecting 169 items                                                            [0m[1mcollecting 169 items                                                            [0m[1mcollecting 173 items                                                            [0m[1mcollecting 173 items                                                            [0m[1mcollecting 175 items                                                            [0m[1mcollecting 175 items                                                            [0m[1mcollecting 203 items                                                            [0m[1mcollecting 203 items                                                            [0m[1mcollecting 226 items                                                            [0m[1mcollecting 226 items                                                            [0m[1mcollected 226 items                                                             [0mtests/test_auth.py::AuthTest::test_auth_gets_disconnected [32mPASSED[0mtests/test_auth.py::AuthTest::test_auth_non_responsive [32mPASSED[0mtests/test_auth.py::AuthTest::test_auth_non_utf8 [32mPASSED[0mtests/test_auth.py::AuthTest::test_auth_utf8 [32mPASSED[0mtests/test_auth.py::AuthTest::test_bad_auth_type [32mPASSED[0mtests/test_auth.py::AuthTest::test_bad_password [32mPASSED[0mtests/test_auth.py::AuthTest::test_interactive_auth [32mPASSED[0mtests/test_auth.py::AuthTest::test_interactive_auth_fallback [32mPASSED[0mtests/test_auth.py::AuthTest::test_multipart_auth [32mPASSED[0mtests/test_buffered_pipe.py::BufferedPipeTest::test_1_buffered_pipe [32mPASSED[0mtests/test_buffered_pipe.py::BufferedPipeTest::test_2_delay [32mPASSED[0mtests/test_buffered_pipe.py::BufferedPipeTest::test_3_close_while_reading [32mPASSED[0mtests/test_buffered_pipe.py::BufferedPipeTest::test_4_or_pipe [32mPASSED[0mtests/test_client.py::SSHClientTest::test_10_auth_trickledown_gsskex [33mSKIPPED[0mtests/test_client.py::SSHClientTest::test_11_auth_trickledown_gssauth [33mSKIPPED[0mtests/test_client.py::SSHClientTest::test_12_reject_policy [32mPASSED[0mtests/test_client.py::SSHClientTest::test_13_reject_policy_gsskex [33mSKIPPED[0mtests/test_client.py::SSHClientTest::test_1_client [32mPASSED[0mtests/test_client.py::SSHClientTest::test_2_5_client_ecdsa [32mPASSED[0mtests/test_client.py::SSHClientTest::test_2_client_dsa [32mPASSED[0mtests/test_client.py::SSHClientTest::test_3_multiple_key_files [32mPASSED[0mtests/test_client.py::SSHClientTest::test_4_auto_add_policy [32mPASSED[0mtests/test_client.py::SSHClientTest::test_5_save_host_keys [32mPASSED[0mtests/test_client.py::SSHClientTest::test_6_cleanup [32mPASSED[0mtests/test_client.py::SSHClientTest::test_7_banner_timeout [32mPASSED[0mtests/test_client.py::SSHClientTest::test_8_auth_trickledown [32mPASSED[0mtests/test_client.py::SSHClientTest::test_9_auth_timeout [32mPASSED[0mtests/test_client.py::SSHClientTest::test_certs_allowed_as_key_filename_values [32mPASSED[0mtests/test_client.py::SSHClientTest::test_certs_implicitly_loaded_alongside_key_filename_keys [32mPASSED[0mtests/test_client.py::SSHClientTest::test_client_can_be_used_as_context_manager [32mPASSED[0mtests/test_client.py::SSHClientTest::test_client_ed25519 [32mPASSED[0mtests/test_client.py::SSHClientTest::test_client_rsa [32mPASSED[0mtests/test_client.py::SSHClientTest::test_default_key_locations_trigger_cert_loads_if_found [32mPASSED[0mtests/test_client.py::SSHClientTest::test_env_update_failures [33mSKIPPED[0mtests/test_client.py::SSHClientTest::test_host_key_negotiation_1 [32mPASSED[0mtests/test_client.py::SSHClientTest::test_host_key_negotiation_2 [32mPASSED[0mtests/test_client.py::SSHClientTest::test_host_key_negotiation_3 [32mPASSED[0mtests/test_client.py::SSHClientTest::test_host_key_negotiation_4 [32mPASSED[0mtests/test_client.py::SSHClientTest::test_missing_key_policy_accepts_classes_or_instances [32mPASSED[0mtests/test_client.py::SSHClientTest::test_multiple_key_files_failure [32mPASSED[0mtests/test_client.py::SSHClientTest::test_update_environment [32mPASSED[0mtests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_not_used_for_password_auth [32mPASSED[0mtests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_used_for_key_passphrase [32mPASSED[0mtests/test_client.py::PasswordPassphraseTests::test_password_kwarg_not_used_for_passphrase_when_passphrase_kwarg_given [32mPASSED[0mtests/test_client.py::PasswordPassphraseTests::test_password_kwarg_used_for_passphrase_when_no_passphrase_kwarg_given [32mPASSED[0mtests/test_client.py::PasswordPassphraseTests::test_password_kwarg_works_for_password_auth [32mPASSED[0mtests/test_client.py::KeyboardInteractiveTests::test_auth_handler_does_not_interfere_with_non_2fa_users [32mPASSED[0mtests/test_client.py::KeyboardInteractiveTests::test_no_auth_handler_for_2fa_user_falls_back_to_reading_from_input [32mPASSED[0mtests/test_client.py::KeyboardInteractiveTests::test_two_factor_auth_handler_works [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_1_simple [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_2_readline [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_3_lf [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_4_write [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_5_flush [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_6_buffering [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_7_read_all [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_8_buffering [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_9_readable [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_A_writable [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_B_readinto [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_write_bad_type [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_write_buffer [33mSKIPPED[0mtests/test_file.py::BufferedFileTest::test_write_bytearray [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_write_memoryview [32mPASSED[0mtests/test_file.py::BufferedFileTest::test_write_unicode_as_binary [32mPASSED[0mtests/test_gssapi.py::GSSAPITest::test_1_pyasn1 [33mSKIPPED[0mtests/test_gssapi.py::GSSAPITest::test_2_gssapi_sspi [33mSKIPPED[0mtests/test_hostkeys.py::HostKeysTest::test_1_load [32mPASSED[0mtests/test_hostkeys.py::HostKeysTest::test_2_add [32mPASSED[0mtests/test_hostkeys.py::HostKeysTest::test_3_dict [32mPASSED[0mtests/test_hostkeys.py::HostKeysTest::test_4_dict_set [32mPASSED[0mtests/test_hostkeys.py::HostKeysTest::test_delitem [32mPASSED[0mtests/test_kex.py::KexTest::test_10_gex_sha256_server_with_old_client [32mPASSED[0mtests/test_kex.py::KexTest::test_11_kex_nistp256_client [32mPASSED[0mtests/test_kex.py::KexTest::test_12_kex_nistp256_server [32mPASSED[0mtests/test_kex.py::KexTest::test_1_group1_client [32mPASSED[0mtests/test_kex.py::KexTest::test_2_group1_server [32mPASSED[0mtests/test_kex.py::KexTest::test_3_gex_client [32mPASSED[0mtests/test_kex.py::KexTest::test_4_gex_old_client [32mPASSED[0mtests/test_kex.py::KexTest::test_5_gex_server [32mPASSED[0mtests/test_kex.py::KexTest::test_6_gex_server_with_old_client [32mPASSED[0mtests/test_kex.py::KexTest::test_7_gex_sha256_client [32mPASSED[0mtests/test_kex.py::KexTest::test_8_gex_sha256_old_client [32mPASSED[0mtests/test_kex.py::KexTest::test_9_gex_sha256_server [32mPASSED[0mtests/test_kex_gss.py::GSSKexTest::test_1_gsskex_and_auth [33mSKIPPED[0mtests/test_kex_gss.py::GSSKexTest::test_2_gsskex_and_auth_rekey [33mSKIPPED[0mtests/test_message.py::MessageTest::test_1_encode [32mPASSED[0mtests/test_message.py::MessageTest::test_2_decode [32mPASSED[0mtests/test_message.py::MessageTest::test_3_add [32mPASSED[0mtests/test_message.py::MessageTest::test_4_misc [32mPASSED[0mtests/test_packetizer.py::PacketizerTest::test_1_write [32mPASSED[0mtests/test_packetizer.py::PacketizerTest::test_2_read [32mPASSED[0mtests/test_packetizer.py::PacketizerTest::test_3_closed [32mPASSED[0mtests/test_pkey.py::KeyTest::test_10_load_ecdsa_256 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_11_load_ecdsa_password_256 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_12_compare_ecdsa_256 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_13_sign_ecdsa_256 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_14_load_ecdsa_384 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_15_load_ecdsa_password_384 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_16_compare_ecdsa_384 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_17_sign_ecdsa_384 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_18_load_ecdsa_521 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_19_load_ecdsa_password_521 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_1_generate_key_bytes [32mPASSED[0mtests/test_pkey.py::KeyTest::test_20_compare_ecdsa_521 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_21_sign_ecdsa_521 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_2_load_rsa [32mPASSED[0mtests/test_pkey.py::KeyTest::test_3_load_rsa_password [32mPASSED[0mtests/test_pkey.py::KeyTest::test_4_load_dss [32mPASSED[0mtests/test_pkey.py::KeyTest::test_5_load_dss_password [32mPASSED[0mtests/test_pkey.py::KeyTest::test_6_compare_rsa [32mPASSED[0mtests/test_pkey.py::KeyTest::test_7_compare_dss [32mPASSED[0mtests/test_pkey.py::KeyTest::test_8_sign_rsa [32mPASSED[0mtests/test_pkey.py::KeyTest::test_9_sign_dss [32mPASSED[0mtests/test_pkey.py::KeyTest::test_A_generate_rsa [32mPASSED[0mtests/test_pkey.py::KeyTest::test_B_generate_dss [32mPASSED[0mtests/test_pkey.py::KeyTest::test_C_generate_ecdsa [32mPASSED[0mtests/test_pkey.py::KeyTest::test_certificates [32mPASSED[0mtests/test_pkey.py::KeyTest::test_ed25519 [32mPASSED[0mtests/test_pkey.py::KeyTest::test_ed25519_compare [32mPASSED[0mtests/test_pkey.py::KeyTest::test_ed25519_load_from_file_obj [32mPASSED[0mtests/test_pkey.py::KeyTest::test_ed25519_nonbytes_password [32mPASSED[0mtests/test_pkey.py::KeyTest::test_keyfile_is_actually_encrypted [32mPASSED[0mtests/test_pkey.py::KeyTest::test_salt_size [32mPASSED[0mtests/test_pkey.py::KeyTest::test_stringification [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_1_file [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_2_close [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_2_sftp_can_be_used_as_context_manager [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_3_write [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_3_sftp_file_can_be_used_as_context_manager [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_4_append [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_5_rename [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_5a_posix_rename [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_6_folder [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_7_listdir [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_7_5_listdir_iter [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_8_setstat [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_9_fsetstat [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_A_readline_seek [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_B_write_seek [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_C_symlink [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_D_flush_seek [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_E_realpath [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_F_mkdir [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_G_chdir [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_H_get_put [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_I_check [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_J_x_flag [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_K_utf8 [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_L_utf8_chdir [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_M_bad_readv [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_N_put_without_confirm [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_O_getcwd [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_putfo_empty_file [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_N_file_with_percent [33mSKIPPED[0mtests/test_sftp.py::TestSFTP::test_O_non_utf8_data [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_sftp_attributes_empty_str [32mPASSED[0mtests/test_sftp.py::TestSFTP::test_write_buffer [33mSKIPPED[0mtests/test_sftp.py::TestSFTP::test_write_memoryview [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_1_lots_of_files [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_2_big_file [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_3_big_file_pipelined [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_4_prefetch_seek [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_5_readv_seek [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_6_lots_of_prefetching [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_7_prefetch_readv [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_8_large_readv [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_9_big_file_big_buffer [32mPASSED[0mtests/test_sftp_big.py::TestBigSFTP::test_A_big_file_renegotiate [32mPASSED[0mtests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_multiple_hosts [32mPASSED[0mtests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_single_host [32mPASSED[0mtests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_two_hosts [32mPASSED[0mtests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_pickling [32mPASSED[0mtests/test_ssh_gss.py::GSSAuthTest::test_1_gss_auth [33mSKIPPED[0mtests/test_ssh_gss.py::GSSAuthTest::test_2_auth_trickledown [33mSKIPPED[0mtests/test_transport.py::TransportTest::test_1_security_options [32mPASSED[0mtests/test_transport.py::TransportTest::test_1b_security_options_reset [32mPASSED[0mtests/test_transport.py::TransportTest::test_2_compute_key [32mPASSED[0mtests/test_transport.py::TransportTest::test_3_simple [32mPASSED[0mtests/test_transport.py::TransportTest::test_3a_long_banner [32mPASSED[0mtests/test_transport.py::TransportTest::test_4_special [32mPASSED[0mtests/test_transport.py::TransportTest::test_5_keepalive [32mPASSED[0mtests/test_transport.py::TransportTest::test_6_exec_command [32mPASSED[0mtests/test_transport.py::TransportTest::test_6a_channel_can_be_used_as_context_manager [32mPASSED[0mtests/test_transport.py::TransportTest::test_7_invoke_shell [32mPASSED[0mtests/test_transport.py::TransportTest::test_8_channel_exception [32mPASSED[0mtests/test_transport.py::TransportTest::test_9_exit_status [32mPASSED[0mtests/test_transport.py::TransportTest::test_A_select [32mPASSED[0mtests/test_transport.py::TransportTest::test_B_renegotiate [32mPASSED[0mtests/test_transport.py::TransportTest::test_C_compression [32mPASSED[0mtests/test_transport.py::TransportTest::test_D_x11 [32mPASSED[0mtests/test_transport.py::TransportTest::test_E_reverse_port_forwarding [32mPASSED[0mtests/test_transport.py::TransportTest::test_F_port_forwarding [32mPASSED[0mtests/test_transport.py::TransportTest::test_G_stderr_select [32mPASSED[0mtests/test_transport.py::TransportTest::test_H_send_ready [32mPASSED[0mtests/test_transport.py::TransportTest::test_I_rekey_deadlock [32mPASSED[0mtests/test_transport.py::TransportTest::test_J_sanitze_packet_size [32mPASSED[0mtests/test_transport.py::TransportTest::test_K_sanitze_window_size [32mPASSED[0mtests/test_transport.py::TransportTest::test_L_handshake_timeout [32mPASSED[0mtests/test_transport.py::TransportTest::test_M_select_after_close [32mPASSED[0mtests/test_transport.py::TransportTest::test_channel_send_buffer [33mSKIPPED[0mtests/test_transport.py::TransportTest::test_channel_send_memoryview [32mPASSED[0mtests/test_transport.py::TransportTest::test_channel_send_misc [32mPASSED[0mtests/test_util.py::UtilTest::test_clamp_value [32mPASSED[0mtests/test_util.py::UtilTest::test_config_addressfamily_and_lazy_fqdn [32mPASSED[0mtests/test_util.py::UtilTest::test_config_dos_crlf_succeeds [32mPASSED[0mtests/test_util.py::UtilTest::test_eintr_retry [32mPASSED[0mtests/test_util.py::UtilTest::test_generate_key_bytes [32mPASSED[0mtests/test_util.py::UtilTest::test_get_hostnames [32mPASSED[0mtests/test_util.py::UtilTest::test_host_config [32mPASSED[0mtests/test_util.py::UtilTest::test_host_config_expose_issue_33 [32mPASSED[0mtests/test_util.py::UtilTest::test_host_config_test_identityfile [32mPASSED[0mtests/test_util.py::UtilTest::test_host_config_test_negation [32mPASSED[0mtests/test_util.py::UtilTest::test_host_config_test_proxycommand [32mPASSED[0mtests/test_util.py::UtilTest::test_host_keys [32mPASSED[0mtests/test_util.py::UtilTest::test_import [32mPASSED[0mtests/test_util.py::UtilTest::test_parse_config [32mPASSED[0mtests/test_util.py::UtilTest::test_proxycommand_config_equals_parsing [32mPASSED[0mtests/test_util.py::UtilTest::test_proxycommand_interpolation [32mPASSED[0mtests/test_util.py::UtilTest::test_proxycommand_none_issue_418 [32mPASSED[0mtests/test_util.py::UtilTest::test_proxycommand_none_masking [32mPASSED[0mtests/test_util.py::UtilTest::test_proxycommand_tilde_expansion [32mPASSED[0mtests/test_util.py::UtilTest::test_quoted_host_in_config [32mPASSED[0mtests/test_util.py::UtilTest::test_quoted_host_names [32mPASSED[0mtests/test_util.py::UtilTest::test_quoted_params_in_config [32mPASSED[0mtests/test_util.py::UtilTest::test_safe_string [32mPASSED[0m[33m=============================== warnings summary ===============================[0mtests/test_auth.py::AuthTest::test_auth_gets_disconnected  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_auth_non_responsive  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_auth_non_utf8  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_auth_utf8  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_bad_auth_type  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_bad_password  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_interactive_auth  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_interactive_auth_fallback  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_auth.py::AuthTest::test_multipart_auth  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_12_reject_policy  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_1_client  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_2_5_client_ecdsa  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_2_client_dsa  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_3_multiple_key_files  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_4_auto_add_policy  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_6_cleanup  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_8_auth_trickledown  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_9_auth_timeout  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_certs_allowed_as_key_filename_values  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_certs_implicitly_loaded_alongside_key_filename_keys  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_client_can_be_used_as_context_manager  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_client_ed25519  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_client_rsa  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_host_key_negotiation_1  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_host_key_negotiation_2  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_host_key_negotiation_3  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::SSHClientTest::test_host_key_negotiation_4  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_multiple_key_files_failure  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::SSHClientTest::test_update_environment  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_not_used_for_password_auth  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_used_for_key_passphrase  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_not_used_for_passphrase_when_passphrase_kwarg_given  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_used_for_passphrase_when_no_passphrase_kwarg_given  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_works_for_password_auth  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::KeyboardInteractiveTests::test_auth_handler_does_not_interfere_with_non_2fa_users  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::KeyboardInteractiveTests::test_no_auth_handler_for_2fa_user_falls_back_to_reading_from_input  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_client.py::KeyboardInteractiveTests::test_two_factor_auth_handler_works  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_kex.py::KexTest::test_11_kex_nistp256_client  /home/travis/build/passed/paramiko/paramiko/tests/test_kex.py:44: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    public_key_numbers_obj = ec.EllipticCurvePublicNumbers.from_encoded_point(ec.SECP256R1(), unhexlify(public_key_numbers))  /home/travis/build/passed/paramiko/paramiko/tests/test_kex.py:49: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    obj.Q_C = ec.EllipticCurvePublicNumbers.from_encoded_point(ec.SECP256R1(), unhexlify(public_key_numbers)).public_key(default_backend())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_kex.py::KexTest::test_12_kex_nistp256_server  /home/travis/build/passed/paramiko/paramiko/tests/test_kex.py:44: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    public_key_numbers_obj = ec.EllipticCurvePublicNumbers.from_encoded_point(ec.SECP256R1(), unhexlify(public_key_numbers))  /home/travis/build/passed/paramiko/paramiko/tests/test_kex.py:47: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    obj.Q_S = ec.EllipticCurvePublicNumbers.from_encoded_point(ec.SECP256R1(), unhexlify(public_key_numbers)).public_key(default_backend())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())tests/test_pkey.py::KeyTest::test_12_compare_ecdsa_256  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_pkey.py::KeyTest::test_13_sign_ecdsa_256  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_pkey.py::KeyTest::test_16_compare_ecdsa_384  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_pkey.py::KeyTest::test_17_sign_ecdsa_384  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_pkey.py::KeyTest::test_20_compare_ecdsa_521  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_pkey.py::KeyTest::test_21_sign_ecdsa_521  /home/travis/build/passed/paramiko/paramiko/paramiko/ecdsakey.py:154: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.ecdsa_curve.curve_class(), pointinfotests/test_sftp.py::TestSFTP::()::test_1_file  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_2_close  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_2_sftp_can_be_used_as_context_manager  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_3_write  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_3_sftp_file_can_be_used_as_context_manager  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_4_append  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_5_rename  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_5a_posix_rename  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_6_folder  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_7_listdir  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_7_5_listdir_iter  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_8_setstat  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_9_fsetstat  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_A_readline_seek  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_B_write_seek  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_C_symlink  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_D_flush_seek  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_E_realpath  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_F_mkdir  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_G_chdir  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_H_get_put  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_I_check  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_J_x_flag  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_K_utf8  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_L_utf8_chdir  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_M_bad_readv  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_N_put_without_confirm  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_O_getcwd  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_putfo_empty_file  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_O_non_utf8_data  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_sftp_attributes_empty_str  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp.py::TestSFTP::()::test_write_memoryview  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_1_lots_of_files  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_2_big_file  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_3_big_file_pipelined  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_4_prefetch_seek  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_5_readv_seek  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_6_lots_of_prefetching  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_7_prefetch_readv  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_8_large_readv  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_9_big_file_big_buffer  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_sftp_big.py::TestBigSFTP::()::test_A_big_file_renegotiate  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_3_simple  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_3a_long_banner  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_4_special  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_5_keepalive  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_6_exec_command  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_6a_channel_can_be_used_as_context_manager  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_7_invoke_shell  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_8_channel_exception  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_9_exit_status  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_A_select  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_B_renegotiate  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_C_compression  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_D_x11  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_E_reverse_port_forwarding  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_F_port_forwarding  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_G_stderr_select  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_H_send_ready  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_I_rekey_deadlock  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_M_select_after_close  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_channel_send_memoryview  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())tests/test_transport.py::TransportTest::test_channel_send_misc  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_C.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:62: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_C_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:74: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:83: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    m.add_string(self.Q_S.public_numbers().encode_point())  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:92: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point    self.curve, Q_S_bytes  /home/travis/build/passed/paramiko/paramiko/paramiko/kex_ecdh_nist.py:103: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.    hm.add_string(self.Q_C.public_numbers().encode_point())-- Docs: http://doc.pytest.org/en/latest/warnings.html[33m[1m============ 212 passed, 14 skipped, 627 warnings in 114.16 seconds ============[0m[114568.86792182922]	DEBUG:paramiko.transport:EOF in transport threadtravis_time:end:11a66970:start=1604846053111433746,finish=1604846169360314291,duration=116248880545[0K[32;1mThe command "inv coverage" exited with 0.[0mtravis_time:start:1a9772db[0K$ inv sites[01mRunning Sphinx v1.6.6[39;49;00m[01mloading pickled environment... [39;49;00mdone[01mbuilding [mo]: [39;49;00mtargets for 0 po files that are out of date[01mbuilding [html][39;49;00m: targets for 0 source files that are out of date[01mupdating environment: [39;49;00m0 added, 8 changed, 0 removed[01mreading sources... [39;49;00m[ 12%] [35mapi/channel[39;49;00m                                           /home/travis/build/passed/paramiko/paramiko/paramiko/transport.py:33: CryptographyDeprecationWarning: Python 3.5 support will be dropped in the next release of cryptography. Please upgrade your Python.  from cryptography.hazmat.backends import default_backend/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/sphinx/util/nodes.py:55: FutureWarning:    The iterable returned by Node.traverse()   will become an iterator instead of a list in Docutils > 0.16.  for classifier in reversed(node.parent.traverse(nodes.classifier)):[01mreading sources... [39;49;00m[ 25%] [35mapi/client[39;49;00m                                            [01mreading sources... [39;49;00m[ 37%] [35mapi/file[39;49;00m                                              [01mreading sources... [39;49;00m[ 50%] [35mapi/keys[39;49;00m                                              /home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/sphinx/util/nodes.py:55: FutureWarning:    The iterable returned by Node.traverse()   will become an iterator instead of a list in Docutils > 0.16.  for classifier in reversed(node.parent.traverse(nodes.classifier)):[01mreading sources... [39;49;00m[ 62%] [35mapi/message[39;49;00m                                           [01mreading sources... [39;49;00m[ 75%] [35mapi/server[39;49;00m                                            [01mreading sources... [39;49;00m[ 87%] [35mapi/sftp[39;49;00m                                              [01mreading sources... [39;49;00m[100%] [35mapi/transport[39;49;00m                                         [01mlooking for now-outdated files... [39;49;00mnone found[01mpickling environment... [39;49;00mdone[01mchecking consistency... [39;49;00mdone[01mpreparing documents... [39;49;00mdone[01mwriting output... [39;49;00m[ 11%] [32mapi/channel[39;49;00m                                            [01mwriting output... [39;49;00m[ 22%] [32mapi/client[39;49;00m                                             [01mwriting output... [39;49;00m[ 33%] [32mapi/file[39;49;00m                                               [01mwriting output... [39;49;00m[ 44%] [32mapi/keys[39;49;00m                                               [01mwriting output... [39;49;00m[ 55%] [32mapi/message[39;49;00m                                            [01mwriting output... [39;49;00m[ 66%] [32mapi/server[39;49;00m                                             [01mwriting output... [39;49;00m[ 77%] [32mapi/sftp[39;49;00m                                               [01mwriting output... [39;49;00m[ 88%] [32mapi/transport[39;49;00m                                          [01mwriting output... [39;49;00m[100%] [32mindex[39;49;00m                                                  [01mgenerating indices...[39;49;00m genindex py-modindex[01mwriting additional pages...[39;49;00m search[01mcopying static files... [39;49;00mdone[01mcopying extra files... [39;49;00mdone[01mdumping search index in English (code: en) ... [39;49;00mdone[01mdumping object inventory... [39;49;00mdone[01mbuild succeeded.[39;49;00m[01mRunning Sphinx v1.6.6[39;49;00m[01mloading pickled environment... [39;49;00mdoneloading intersphinx inventory from /home/travis/build/passed/paramiko/paramiko/sites/www/../docs/_build/objects.inv...[01mbuilding [mo]: [39;49;00mtargets for 0 po files that are out of date[01mbuilding [html][39;49;00m: targets for 0 source files that are out of date[01mupdating environment: [39;49;00m0 added, 0 changed, 0 removed[01mlooking for now-outdated files... [39;49;00mnone found[01mno targets are out of date.[39;49;00m[01mbuild succeeded.[39;49;00mtravis_time:end:1a9772db:start=1604846169374395298,finish=1604846190384949966,duration=21010554668[0K[32;1mThe command "inv sites" exited with 0.[0mtravis_time:start:1ef79efa[0K$ flake8travis_time:end:1ef79efa:start=1604846190397121199,finish=1604846193844789668,duration=3447668469[0K[32;1mThe command "flake8" exited with 0.[0mtravis_fold:start:cache.2[0Kstore build cachetravis_time:start:01f157ab[0Ktravis_time:end:01f157ab:start=1604846193858166766,finish=1604846193869137429,duration=10970663[0Ktravis_time:start:0bde4ff0[0K/home/travis/.casher/bin/casher:190: warning: Insecure world writable dir /usr/local/clang-5.0.0/bin in PATH, mode 040777[32;1mchanges detected, packing new archive[0m/home/travis/.casher/bin/casher:213:in `cache_archive_name': undefined method `[]' for nil:NilClass (NoMethodError)	from /home/travis/.casher/bin/casher:143:in `push'	from /home/travis/.casher/bin/casher:53:in `block in run'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:88:in `block in timeout'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:32:in `block in catch'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:32:in `catch'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:32:in `catch'	from /home/travis/.rvm/rubies/ruby-2.2.7/lib/ruby/2.2.0/timeout.rb:103:in `timeout'	from /home/travis/.casher/bin/casher:53:in `run'	from /home/travis/.casher/bin/casher:263:in `<main>'travis_time:end:0bde4ff0:start=1604846193882058921,finish=1604846196751144033,duration=2869085112[0Ktravis_fold:end:cache.2[0Ktravis_fold:start:after_success[0Ktravis_time:start:01bbb180[0K$ codecov      _____          _     / ____|        | |    | |     ___   __| | ___  ___ _____   __    | |    / _ \ / _  |/ _ \/ __/ _ \ \ / /    | |___| (_) | (_| |  __/ (_| (_) \ V /     \_____\___/ \____|\___|\___\___/ \_/                                    v2.0.13[90m==>[0m Detecting CI provider    Travis Detected  -> Got branch from git/hg  -> Got sha from git/hg[90m==>[0m Preparing upload[41mError:[0m[91m Missing repository upload token[0m[42mTip:[0m[32m See an example python repo: https://github.com/codecov/example-python[0m[92mSupport channels:[0m  Email:   hello@codecov.io  IRC:     #codecov  Gitter:  https://gitter.im/codecov/support  Twitter: @codecovtravis_time:end:01bbb180:start=1604846196768873777,finish=1604846197026756290,duration=257882513[0Ktravis_fold:end:after_success[0KDone. Your build exited with 0.